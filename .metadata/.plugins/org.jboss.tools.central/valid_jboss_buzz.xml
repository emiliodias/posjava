<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" media="screen" href="/~d/styles/atom10full.xsl"?><?xml-stylesheet type="text/css" media="screen" href="http://feeds.feedburner.com/~d/styles/itemcontent.css"?><feed xmlns="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:feedburner="http://rssnamespace.org/feedburner/ext/1.0"><title>JBoss Tools Aggregated Feed</title><link rel="alternate" href="http://tools.jboss.org" /><subtitle>JBoss Tools Aggregated Feed</subtitle><dc:creator>JBoss Tools</dc:creator><atom10:link xmlns:atom10="http://www.w3.org/2005/Atom" rel="self" type="application/atom+xml" href="http://feeds.feedburner.com/jbossbuzz" /><feedburner:info uri="jbossbuzz" /><atom10:link xmlns:atom10="http://www.w3.org/2005/Atom" rel="hub" href="http://pubsubhubbub.appspot.com/" /><entry><title>Eclipse Che 6.6 Release Notes</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/T92etu1Qkco/" /><category term="codenvy" scheme="searchisko:content:tags" /><category term="community" scheme="searchisko:content:tags" /><category term="Developer Tools" scheme="searchisko:content:tags" /><category term="docker" scheme="searchisko:content:tags" /><category term="Eclipse Che" scheme="searchisko:content:tags" /><category term="feed_group_name_nonmiddleware" scheme="searchisko:content:tags" /><category term="feed_name_redhat_developer_blog" scheme="searchisko:content:tags" /><category term="ide" scheme="searchisko:content:tags" /><category term="Kubernetes" scheme="searchisko:content:tags" /><category term="microservices" scheme="searchisko:content:tags" /><category term="multi-tenancy" scheme="searchisko:content:tags" /><category term="Red Hat OpenShift" scheme="searchisko:content:tags" /><category term="Red Hat OpenShift Container Platform" scheme="searchisko:content:tags" /><author><name>Dave Neary</name></author><id>searchisko:content:id:jbossorg_blog-eclipse_che_6_6_release_notes</id><updated>2018-06-08T22:06:00Z</updated><published>2018-06-08T22:06:00Z</published><content type="html">&lt;p&gt;[This article is cross-posted from the &lt;a href="https://che.eclipse.org/"&gt;Eclipse Che Blog.&lt;/a&gt;]&lt;/p&gt; &lt;h1&gt;Eclipse Che 6.6 Release Notes&lt;/h1&gt; &lt;p&gt;Eclipse Che 6.6 is here! Since the release of Che 6.0, the community has added a number of new capabilities:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;strong&gt;Kubernetes support:&lt;/strong&gt; Run Che on Kubernetes and deploy it using Helm.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Hot server updates:&lt;/strong&gt; Upgrade Che with zero downtime.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;C/C++ support:&lt;/strong&gt; ClangD Language Server was added.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Camel LS support:&lt;/strong&gt; Apache Camel Language Server Protocol (LSP) support was added.&lt;/li&gt; &lt;li&gt;&amp;#60;strong&amp;#8221;&amp;#62;Eclipse Java Development Tools (JDT) Language Server (LS): Extended LS capabilities were added for Eclipse Che.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Faster workspace loading:&lt;/strong&gt; Images are pulled in parallel with the new UI.&lt;/li&gt; &lt;/ul&gt; &lt;h2&gt;Quick Start&lt;/h2&gt; &lt;p&gt;Che is a cloud IDE and containerized workspace server. You can get started with Che by using the following links:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Deploy to Kubernetes (&lt;a href="https://www.eclipse.org/che/docs/kubernetes-single-user.html" target="_blank" rel="noopener"&gt;single-user&lt;/a&gt; or &lt;a href="https://www.eclipse.org/che/docs/kubernetes-multi-user.html" target="_blank" rel="noopener"&gt;multi-user&lt;/a&gt;).&lt;/li&gt; &lt;li&gt;Deploy to Red Hat OpenShift (&lt;a href="https://www.eclipse.org/che/docs/openshift-single-user.html" target="_blank" rel="noopener"&gt;single-user&lt;/a&gt; or &lt;a href="https://www.eclipse.org/che/docs/openshift-multi-user.html" target="_blank" rel="noopener"&gt;multi-user&lt;/a&gt;).&lt;/li&gt; &lt;li&gt;Install on Docker (&lt;a href="https://www.eclipse.org/che/docs/docker-single-user.html" target="_blank" rel="noopener"&gt;single-user&lt;/a&gt; or &lt;a href="https://www.eclipse.org/che/docs/docker-multi-user.html" target="_blank" rel="noopener"&gt;multi-user&lt;/a&gt;).&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&lt;span id="more-500597"&gt;&lt;/span&gt;&lt;/p&gt; &lt;h2&gt;Kubernetes Support (&lt;a href="https://github.com/eclipse/che/pull/8559" target="_blank" rel="noopener"&gt;#8559&lt;/a&gt;)&lt;/h2&gt; &lt;p&gt;In the past, Eclipse Che was primarily targeted at Docker. However, with the rise of Kubernetes, we have added OpenShift and native Kubernetes as primary deployment platforms.&lt;/p&gt; &lt;p&gt;Since the 6.0.0 release, we have made a number of changes to ensure that Che works with Kubernetes. These changes were related to volume management for workspaces, routing, service creation, and more.&lt;/p&gt; &lt;p&gt;We have also recently added Helm charts for &lt;a href="http://www.eclipse.org/che/docs/kubernetes-multi-user.html" target="_blank" rel="noopener"&gt;deploying Che on Kubernetes&lt;/a&gt;. Helm is a popular application template system for deploying container applications on Kubernetes. Helm charts were first included in the 6.2.0 release, and support has improved through the 6.3.0 and 6.4.0 releases.&lt;/p&gt; &lt;p&gt;Much of the work to support TLS routes and multiuser Che deployments using Helm was contributed by &lt;a href="https://github.com/guydaichs" target="_blank" rel="noopener"&gt;Guy Daich&lt;/a&gt; from SAP. Thank you, Guy!&lt;/p&gt; &lt;p&gt;Learn more about Che on Kubernetes in the &lt;a href="http://www.eclipse.org/che/docs/kubernetes-multi-user.html" target="_blank" rel="noopener"&gt;documentation&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Highlighted Issues&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;See the following pull requests (PRs):&lt;/p&gt; &lt;ul class="postList"&gt; &lt;li&gt;Kubernetes-infra: routing, TLS (rebased) &lt;a href="https://github.com/eclipse/che/pull/9329" target="_blank" rel="noopener"&gt;#9329&lt;/a&gt;&lt;/li&gt; &lt;li&gt;Use templates only to deploy Che to OpenShift &lt;a href="https://github.com/eclipse/che/pull/9190" target="_blank" rel="noopener"&gt;#9190&lt;/a&gt;&lt;/li&gt; &lt;li&gt;Kubernetes multiuser helm &lt;a href="https://github.com/eclipse/che/pull/8973" target="_blank" rel="noopener"&gt;#8973&lt;/a&gt;&lt;/li&gt; &lt;li&gt;Kubernetes-infra: server routing strategies and basic TLS &lt;a href="https://github.com/eclipse/che/issues?q=is%3Apr+helm+label%3Akind%2Fenhancement" target="_blank" rel="noopener"&gt;kind/enhancement&lt;/a&gt; status/code-review &lt;a href="https://github.com/eclipse/che/pull/8822" target="_blank" rel="noopener"&gt;#8822&lt;/a&gt;&lt;/li&gt; &lt;li&gt;Initial support for deploying Che to Kubernetes using Helm charts &lt;a href="https://github.com/eclipse/che/pull/8715" target="_blank" rel="noopener"&gt;#8715&lt;/a&gt;&lt;/li&gt; &lt;li&gt;Added Kubernetes infrastructure &lt;a href="https://github.com/eclipse/che/pull/8559" target="_blank" rel="noopener"&gt;#8559&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2&gt;Hot Server Updates (&lt;a href="https://github.com/eclipse/che/issues/8547" target="_blank" rel="noopener"&gt;#8547&lt;/a&gt;)&lt;/h2&gt; &lt;p&gt;In recent releases, we steadily improved the ability to upgrade the Che server without having to stop or restart active workspaces. In Che 6.6.0, it is now possible to upgrade the Che server with no downtime for active workspaces, and there is only a short period when you cannot start new workspaces. This was a request from our enterprise users, but it helps teams of all sizes.&lt;/p&gt; &lt;p&gt;You can learn more in the &lt;a href="http://www.eclipse.org/che/docs/openshift-admin-guide.html#rolling-update" target="_blank" rel="noopener"&gt;documentation&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Highlighted Issues&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;See the following PRs:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Implement interruption of start for OpenShift workspaces &lt;a href="https://github.com/eclipse/che/issues/5918" target="_blank" rel="noopener"&gt;#5918&lt;/a&gt;&lt;/li&gt; &lt;li&gt;Implement recovery for OpenShift infrastructure &lt;a href="https://github.com/eclipse/che/issues/5919" target="_blank" rel="noopener"&gt;#5919&lt;/a&gt;&lt;/li&gt; &lt;li&gt;Server checkers won’t be started if a workspace is started by another Che Server instance &lt;a href="https://github.com/eclipse/che/issues/9502" target="_blank" rel="noopener"&gt;#9502&lt;/a&gt;&lt;/li&gt; &lt;li&gt;Document procedure of rolling hot update &lt;a href="https://github.com/eclipse/che/issues/9630" target="_blank" rel="noopener"&gt;#9630&lt;/a&gt;&lt;/li&gt; &lt;li&gt;Adapt ServiceTermination functionality to workspaces recovering &lt;a href="https://github.com/eclipse/che/issues/9317" target="_blank" rel="noopener"&gt;#9317&lt;/a&gt;&lt;/li&gt; &lt;li&gt;Server checkers works incorrectly when k8s/os workspaces are recovered &lt;a href="https://github.com/eclipse/che/issues/9453" target="_blank" rel="noopener"&gt;#9453&lt;/a&gt;&lt;/li&gt; &lt;li&gt;Add an ability to use distributed cache for storing workspace statuses in WorkspaceRuntimes &lt;a href="https://github.com/eclipse/che/issues/9206" target="_blank" rel="noopener"&gt;#9206&lt;/a&gt;&lt;/li&gt; &lt;li&gt;Do not use data volume to store agents on OpenShift/Kubernetes &lt;a href="https://github.com/eclipse/che/issues/9040" target="_blank" rel="noopener"&gt;#9040&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2&gt;C/C++ Support with ClangD LS (&lt;a href="https://github.com/eclipse/che/pull/7516" target="_blank" rel="noopener"&gt;#7516&lt;/a&gt;)&lt;/h2&gt; &lt;p&gt;&lt;a href="https://clang.llvm.org/" target="_blank" rel="noopener"&gt;Clang&lt;/a&gt; provides a C and C++ language front end for the LLVM compiler suite, and the &lt;a href="http://llvm.org/viewvc/llvm-project/clang-tools-extra/trunk/clangd/" target="_blank" rel="noopener"&gt;Clangd&lt;/a&gt; LS enables improved support for the C language in Eclipse Che and other LSP-capable IDEs. Many thanks to &lt;a href="https://github.com/hkolvenbach" target="_blank" rel="noopener"&gt;Hanno Kolvenbach&lt;/a&gt; from Silexica for the contribution of this feature.&lt;/p&gt; &lt;figure id="8390" class="graf graf--figure graf-after--p"&gt; &lt;div class="aspectRatioPlaceholder is-locked"&gt; &lt;div class="aspectRatioPlaceholder-fill"&gt; &lt;img class=" alignnone size-medium wp-image-500887 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2018/06/1C7r1KZu69SbYN5Y4O6G__w.gif" src="https://developers.redhat.com/blog/wp-content/uploads/2018/06/1C7r1KZu69SbYN5Y4O6G__w-300x104.gif" alt="" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/06/1C7r1KZu69SbYN5Y4O6G__w-300x104.gif 300w, https://developers.redhat.com/blog/wp-content/uploads/2018/06/1C7r1KZu69SbYN5Y4O6G__w-768x266.gif 768w" sizes="(max-width: 300px) 100vw, 300px" /&gt;&lt;/div&gt; &lt;div class="progressiveMedia js-progressiveMedia graf-image is-canvasLoaded is-imageLoaded"&gt;Code Completion with ClangD&lt;/div&gt; &lt;/div&gt; &lt;/figure&gt; &lt;figure id="d717" class="graf graf--figure graf-after--figure graf--trailing"&gt; &lt;div class="aspectRatioPlaceholder is-locked"&gt; &lt;div class="aspectRatioPlaceholder-fill"&gt;&lt;/div&gt; &lt;div class="progressiveMedia js-progressiveMedia graf-image is-canvasLoaded is-imageLoaded"&gt; &lt;img class=" alignnone size-medium wp-image-500907 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2018/06/1iRMk1wY-FqyfMkFK9_sfoQ.gif" src="https://developers.redhat.com/blog/wp-content/uploads/2018/06/1iRMk1wY-FqyfMkFK9_sfoQ-300x104.gif" alt="" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/06/1iRMk1wY-FqyfMkFK9_sfoQ-300x104.gif 300w, https://developers.redhat.com/blog/wp-content/uploads/2018/06/1iRMk1wY-FqyfMkFK9_sfoQ-768x266.gif 768w" sizes="(max-width: 300px) 100vw, 300px" /&gt;&lt;/div&gt; &lt;/div&gt; &lt;/figure&gt; &lt;figure id="d717" class="graf graf--figure graf-after--figure graf--trailing"&gt; &lt;div class="aspectRatioPlaceholder is-locked"&gt; &lt;div class="progressiveMedia js-progressiveMedia graf-image is-canvasLoaded is-imageLoaded"&gt;Go to Definition with ClangD&lt;/div&gt; &lt;/div&gt; &lt;/figure&gt; &lt;h2&gt;Apache Camel LSP Support (&lt;a href="https://github.com/eclipse/che/pull/8648" target="_blank" rel="noopener"&gt;#8648&lt;/a&gt;)&lt;/h2&gt; &lt;figure id="f58b" class="graf graf--figure graf-after--h3"&gt; &lt;div class="aspectRatioPlaceholder is-locked"&gt; &lt;div class="aspectRatioPlaceholder-fill"&gt;&lt;/div&gt; &lt;div class="progressiveMedia js-progressiveMedia graf-image is-canvasLoaded is-imageLoaded"&gt;&lt;/div&gt; &lt;/div&gt; &lt;/figure&gt; &lt;figure id="f58b" class="graf graf--figure graf-after--h3"&gt; &lt;div class="aspectRatioPlaceholder is-locked"&gt; &lt;div class="progressiveMedia js-progressiveMedia graf-image is-canvasLoaded is-imageLoaded"&gt;&lt;img class="progressiveMedia-image js-progressiveMedia-image" src="https://cdn-images-1.medium.com/max/1600/1*GoahbJZw331xQHMUfgChVQ.png" /&gt;&lt;/div&gt; &lt;/div&gt; &lt;/figure&gt; &lt;p&gt;&lt;a href="https://github.com/lhein/camel-language-server" target="_blank" rel="noopener"&gt;Camel-language-server&lt;/a&gt; is a server implementation that provides Camel DSL intelligence. The server adheres to the &lt;a href="https://github.com/Microsoft/language-server-protocol" target="_blank" rel="noopener"&gt;Language Server Protocol&lt;/a&gt; and has been integrated into Eclipse Che. The server utilizes &lt;a href="http://camel.apache.org/" target="_blank" rel="nofollow noopener"&gt;Apache Camel&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Related PRs&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;See the following PRs:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Introduce Apache Camel LSP support &lt;a href="https://github.com/eclipse/che/pull/8648" target="_blank" rel="noopener"&gt;#8648&lt;/a&gt;&lt;/li&gt; &lt;li&gt;[533196] Fix Camel LSP artefact to download &lt;a href="https://github.com/eclipse/che/pull/9324" target="_blank" rel="noopener"&gt;#9324&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2&gt;Eclipse JDT LS (&lt;a href="https://github.com/eclipse/che/issues/6157" target="_blank" rel="noopener"&gt;#6157&lt;/a&gt;)&lt;/h2&gt; &lt;p&gt;The Eclipse JDT LS combines the power of the Eclipse JDT (that powers the Eclipse desktop IDE) with the &lt;a href="https://github.com/Microsoft/language-server-protocol" target="_blank" rel="noopener"&gt;Language Server Protocol&lt;/a&gt;. The JDT LS can be used with any editor that supports the protocol, including Che of course. The server is based on:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href="https://github.com/eclipse/lsp4j" target="_blank" rel="noopener"&gt;Eclipse LSP4J&lt;/a&gt;, the Java binding for LSP&lt;/li&gt; &lt;li&gt;&lt;a href="http://www.eclipse.org/jdt/" target="_blank" rel="nofollow noopener"&gt;Eclipse JDT&lt;/a&gt;, which provides Java support (code completion, references, diagnostics, and so on) in Eclipse IDE&lt;/li&gt; &lt;li&gt;&lt;a href="http://www.eclipse.org/m2e/" target="_blank" rel="nofollow noopener"&gt;M2Eclipse&lt;/a&gt;, which provides Maven support&lt;/li&gt; &lt;li&gt;&lt;a href="https://github.com/eclipse/buildship" target="_blank" rel="noopener"&gt;Buildship&lt;/a&gt;, which provides Gradle support&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Eclipse Che will soon switch its Java support to use the JDT LS. In order to support this transition, we’ve been working hard on supporting extended LS capabilities. Java is one of the most used languages by Che users, and we are going to bring even more capabilities thanks to the JDT LS. Once the switch is done, you can expect more Java versions to be supported, as well as Maven and Gradle support!&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Highlighted Issues&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;See the following PRs:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Commands do not work when jdt.ls not started &lt;a href="https://github.com/eclipse/che/issues/8673" target="_blank" rel="noopener"&gt;#8673&lt;/a&gt;&lt;/li&gt; &lt;li&gt;Allow custom notifications &lt;a href="https://github.com/eclipse/eclipse.jdt.ls/issues/522" target="_blank" rel="noopener"&gt;eclipse/eclipse.jdt.ls#522&lt;/a&gt;&lt;/li&gt; &lt;li&gt;Support formatter options &lt;a href="https://github.com/eclipse/eclipse.jdt.ls/issues/623" target="_blank" rel="noopener"&gt;eclipse/eclipse.jdt.ls#623&lt;/a&gt;&lt;/li&gt; &lt;li&gt;Update Che doc for jdt.ls use &lt;a href="https://github.com/eclipse/che/issues/8880" target="_blank" rel="noopener"&gt;#8880&lt;/a&gt;&lt;/li&gt; &lt;li&gt;Implement &lt;code&gt;textDocument/onTypeFormatting&lt;/code&gt; support &lt;a href="https://github.com/eclipse/eclipse.jdt.ls/issues/569" target="_blank" rel="noopener"&gt;eclipse/eclipse.jdt.ls#569&lt;/a&gt;&lt;/li&gt; &lt;li&gt;Only return jdt:// URLs if clients support it &lt;a href="https://github.com/eclipse/eclipse.jdt.ls/issues/649" target="_blank" rel="noopener"&gt;eclipse/eclipse.jdt.ls#649&lt;/a&gt;&lt;/li&gt; &lt;li&gt;Update lsp4j to 0.4.0 &lt;a href="https://github.com/eclipse/eclipse.jdt.ls/issues/653" target="_blank" rel="noopener"&gt;eclipse/eclipse.jdt.ls#653&lt;/a&gt;&lt;/li&gt; &lt;li&gt;Autocompletion should return Javadoc in Markdown &lt;a href="https://github.com/eclipse/eclipse.jdt.ls/issues/654" target="_blank" rel="noopener"&gt;eclipse/eclipse.jdt.ls#654&lt;/a&gt;&lt;/li&gt; &lt;li&gt;Enable annotation processing &lt;a href="https://github.com/eclipse/eclipse.jdt.ls/issues/128" target="_blank" rel="noopener"&gt;eclipse/eclipse.jdt.ls#128&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2&gt;Faster Workspace Loading (&lt;a href="https://github.com/eclipse/che/pull/8748" target="_blank" rel="noopener"&gt;#8748&lt;/a&gt;)&lt;/h2&gt; &lt;p&gt;In version 6.2.0, we introduced the ability for Che to pull multiple images in parallel through the SPI. This way, when you are working on a multi-container based application, your workspace’s container images are instantiated more quickly.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Highlighted Issues&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;See the following PR:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Che should pull images in parallel (&lt;a href="https://github.com/eclipse/che/issues/7102" target="_blank" rel="noopener"&gt;#7102&lt;/a&gt;)&lt;/li&gt; &lt;/ul&gt; &lt;h2&gt;Coming Soon&lt;/h2&gt; &lt;p&gt;You can keep track of our future plans for Eclipse Che on the &lt;a href="https://github.com/eclipse/che/wiki/Roadmap" target="_blank" rel="noopener"&gt;project roadmap page&lt;/a&gt;. In coming releases, you can expect further improvements to the extensibility of the platform, including an Eclipse Che plugins framework, support for a debug adapter protocol to improve debugging capabilities in the IDE, integration of more cloud-native technologies into workspace management, and scalability and reliability work to make Eclipse Che even more suitable for large enterprise users.&lt;/p&gt; &lt;p&gt;The community is working hard on those different aspects, and we will be speaking about this more extensively in the following weeks. If you are interested in learning more and want to eventually engage, don’t forget to join the &lt;a href="https://github.com/eclipse/che/wiki/Che-Dev-Meetings" target="_blank" rel="noopener"&gt;bi-weekly community call&lt;/a&gt;.&lt;/p&gt; &lt;h2&gt;Getting Started&lt;/h2&gt; &lt;p&gt;&lt;a href="https://www.eclipse.org/che/docs/infra-support.html" target="_blank" rel="noopener"&gt;Get started&lt;/a&gt; on Kubernetes, OpenShift, or Docker.&lt;/p&gt; &lt;p&gt;Learn more in our &lt;a href="https://www.eclipse.org/che/docs/infra-support.html" target="_blank" rel="noopener"&gt;documentation&lt;/a&gt; and start using a shared Che server or a local instance today.&lt;/p&gt; &lt;p&gt;The Eclipse Che project is always looking for user feedback and new contributors! Find out how you can &lt;a href="https://github.com/eclipse/che/blob/master/CONTRIBUTING.md" target="_blank" rel="noopener"&gt;get involved and help make Che even better&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F06%2F08%2Feclipse-che-6-6-release-notes%2F&amp;#38;linkname=Eclipse%20Che%206.6%20Release%20Notes" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F06%2F08%2Feclipse-che-6-6-release-notes%2F&amp;#38;linkname=Eclipse%20Che%206.6%20Release%20Notes" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_google_plus" href="https://www.addtoany.com/add_to/google_plus?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F06%2F08%2Feclipse-che-6-6-release-notes%2F&amp;#38;linkname=Eclipse%20Che%206.6%20Release%20Notes" title="Google+" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F06%2F08%2Feclipse-che-6-6-release-notes%2F&amp;#38;linkname=Eclipse%20Che%206.6%20Release%20Notes" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F06%2F08%2Feclipse-che-6-6-release-notes%2F&amp;#38;linkname=Eclipse%20Che%206.6%20Release%20Notes" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F06%2F08%2Feclipse-che-6-6-release-notes%2F&amp;#38;linkname=Eclipse%20Che%206.6%20Release%20Notes" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F06%2F08%2Feclipse-che-6-6-release-notes%2F&amp;#38;linkname=Eclipse%20Che%206.6%20Release%20Notes" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F06%2F08%2Feclipse-che-6-6-release-notes%2F&amp;#38;linkname=Eclipse%20Che%206.6%20Release%20Notes" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F06%2F08%2Feclipse-che-6-6-release-notes%2F&amp;#38;title=Eclipse%20Che%206.6%20Release%20Notes" data-a2a-url="https://developers.redhat.com/blog/2018/06/08/eclipse-che-6-6-release-notes/" data-a2a-title="Eclipse Che 6.6 Release Notes"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2018/06/08/eclipse-che-6-6-release-notes/"&gt;Eclipse Che 6.6 Release Notes&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;RHD Blog&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/T92etu1Qkco" height="1" width="1" alt=""/&gt;</content><summary>[This article is cross-posted from the Eclipse Che Blog.] Eclipse Che 6.6 Release Notes Eclipse Che 6.6 is here! Since the release of Che 6.0, the community has added a number of new capabilities: Kubernetes support: Run Che on Kubernetes and deploy it using Helm. Hot server updates: Upgrade Che with zero downtime. C/C++ support: ClangD Language Server was added. Camel LS support: Apache Camel Lan...</summary><dc:creator>Dave Neary</dc:creator><dc:date>2018-06-08T22:06:00Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2018/06/08/eclipse-che-6-6-release-notes/</feedburner:origLink></entry><entry><title>This week in JBoss, 7th June 2018 - No Rest for the Weary</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/U2x3FRUZz9I/this-week-in-jboss-7th-june-2018-no-rest-for-the-weary" /><category term="CDK" scheme="searchisko:content:tags" /><category term="Elytron" scheme="searchisko:content:tags" /><category term="feed_group_name_global" scheme="searchisko:content:tags" /><category term="feed_name_weeklyeditorial" scheme="searchisko:content:tags" /><category term="fuse;" scheme="searchisko:content:tags" /><category term="infinispan;" scheme="searchisko:content:tags" /><category term="jboss migration" scheme="searchisko:content:tags" /><category term="wildfly 10" scheme="searchisko:content:tags" /><category term="wildlfy-elytron" scheme="searchisko:content:tags" /><author><name>Romain Pelisse</name></author><id>searchisko:content:id:jbossorg_blog-this_week_in_jboss_7th_june_2018_no_rest_for_the_weary</id><updated>2018-06-07T17:09:25Z</updated><published>2018-06-07T17:09:25Z</published><content type="html">&lt;!-- [DocumentBodyStart:3befbd40-6da2-4b9f-b066-cef74fbea10a] --&gt;&lt;div class="jive-rendered-content"&gt;&lt;p&gt;&lt;em&gt;Welcome to a new edition of the JBoss Weekly Editorial. As summer comes closer on the northern hemisphere, the blue sky and sunny days do not appear to be able to hinder the community progress. No rest for the &lt;span data-dobid="hdw"&gt;weary&lt;/span&gt;, ain't it? As proof, Red Hat just released Red Hat Fuse 7 - obviously built from the tremendous amount of work the Fuse community has put in the project in the last month (and releases).&lt;/em&gt;&lt;/p&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;h2&gt;Techbytes&lt;/h2&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;p&gt;We'll start this editorial by jumping directly into the a set of technical articles that have been released in the previous week. The first we would like to mention is &lt;a class="jive-link-external-small" href="http://in.relation.to/2018/06/04/best-way-write-hibernate-orm-issue-test-case/" rel="nofollow"&gt;The best way to write a Hibernate ORM issue test case &lt;/a&gt;. It will be of interest to anyone who would like to contribute a feature or a bug fix to the project, but also reveal an often under documented aspect a project: the testing framework.&lt;/p&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;p&gt;Right after this one, let's go into something a bit more practical and take a deep look at how to &lt;a class="jive-link-blog-small" data-containerId="5158" data-containerType="37" data-objectId="6192" data-objectType="38" href="https://developer.jboss.org/people/fjuma/blog/2018/06/01/configuring-permissions-using-elytron-in-wildfly-13"&gt;Configure permissions using Elytron in WildFly 13&lt;/a&gt;. And, as long as we talk about our beloved app server, let's take a peak at &lt;a class="jive-link-external-small" href="http://wildfly.org/news/2018/06/01/Whats-New-In-HAL/" rel="nofollow"&gt;What&amp;#8217;s New in WildFly Management Console&lt;/a&gt;. Still related to Wildfly, we need to mention this interesting &lt;a class="jive-link-external-small" href="http://www.schabell.org/2018/06/shift-dev-2018-howto-jump-start-career-in-opensource-slides.html" rel="nofollow"&gt;Introduction to Red Hat Application Migration Toolkit&lt;/a&gt;.&lt;/p&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;h2&gt;Events &amp;amp; Evangelist's Corner&lt;/h2&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;p&gt;As always, our own Eric D. Schabell has been active last week and has just released the slides of his talk at &lt;a class="jive-link-external-small" href="http://www.schabell.org/2018/06/shift-dev-2018-howto-jump-start-career-in-opensource-slides.html" rel="nofollow"&gt;Shift Developer Conference 2018 on How to Jump Start a Career in Open Source&lt;/a&gt;. He was also in Scotland, just yesterday, to give a talk on &lt;a class="jive-link-external-small" href="https://developers.redhat.com/blog/2018/05/28/application-modernization-and-migration-tech-talk-scotland-jbug-meetup/" rel="nofollow"&gt;Application Modernization and Migration Tech Talk at Scotland JBug Meetup &lt;/a&gt;Hopefully some of you living in the area will have had a chance to catch him!&lt;/p&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;p&gt;&lt;span class="post-author vcard"&gt; &lt;span class="fn"&gt;Galder Zamarre&amp;#241;o, of the Infinispan project, have been doing a look at conference lately. I ran into him in Paris, at Devoxx France, where he delivered (at least) a talk and a lab, and, right after that, he to two others conferences, that he wished to thanks on the project blog: &lt;br/&gt;&lt;/span&gt;&lt;/span&gt;&lt;a class="jive-link-external-small" href="https://blog.infinispan.org/2018/06/thanks-great-indian-developer-summit.html" rel="nofollow"&gt;Infinispan thanks Great Indian Developer Summit &amp;amp; Voxxed Days Zurich&lt;/a&gt;. His "world tour" of a sort is, of course, not finish, as he also attends our very own Red Hat Summit.&lt;/p&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;h2&gt;Releases, releases, releases&lt;/h2&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;p&gt;There is only one release we will mention in this section, for once, but it's a big one:&amp;#160; &lt;a class="jive-link-external-small" href="http://wei-meilin.blogspot.com/2018/06/red-hat-fuse-7-announcing-red-hat-fuse.html" rel="nofollow"&gt;Red Hat Fuse 7 - Announcing Red Hat Fuse 7 GA!!&lt;/a&gt;&lt;/p&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;h2&gt;Decaf&lt;/h2&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;p&gt;Docker, and container in a more general sense, adoption have certainly increased a lot over the few last year. This adoption is also quite important in the Java and JBoss ecosystem, thus maybe this blog entry might be interesting to you too: &lt;a class="jive-link-external-small" href="https://developers.redhat.com/blog/2018/05/30/how-to-install-red-hat-cdk-3-4-on-fedora-28/" rel="nofollow"&gt;How to install Red Hat CDK 3.4 on Fedora 28.&lt;/a&gt;&lt;/p&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;p&gt;&lt;em&gt;Hopefully, you have found something in this week's editorial to pique your interest and give you something to explore while waiting for next week's installment. Join us here next week for more news from the JBoss Community.&lt;/em&gt;&lt;/p&gt;&lt;/div&gt;&lt;!-- [DocumentBodyEnd:3befbd40-6da2-4b9f-b066-cef74fbea10a] --&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/U2x3FRUZz9I" height="1" width="1" alt=""/&gt;</content><summary>Welcome to a new edition of the JBoss Weekly Editorial. As summer comes closer on the northern hemisphere, the blue sky and sunny days do not appear to be able to hinder the community progress. No rest for the weary, ain't it? As proof, Red Hat just released Red Hat Fuse 7 - obviously built from the tremendous amount of work the Fuse community has put in the project in the last month (and releases...</summary><dc:creator>Romain Pelisse</dc:creator><dc:date>2018-06-07T17:09:25Z</dc:date><feedburner:origLink>https://developer.jboss.org/blogs/weekly-editorial/2018/06/07/this-week-in-jboss-7th-june-2018-no-rest-for-the-weary</feedburner:origLink></entry><entry><title>Next DevNation Live: Your Journey to a Serverless World—An Introduction to Serverless, June 7th, 12pm EDT</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/9zpX3YYOwUk/" /><category term="Apache OpenWhisk" scheme="searchisko:content:tags" /><category term="cloud-native apps" scheme="searchisko:content:tags" /><category term="devnation" scheme="searchisko:content:tags" /><category term="DevNation Live" scheme="searchisko:content:tags" /><category term="events" scheme="searchisko:content:tags" /><category term="feed_group_name_nonmiddleware" scheme="searchisko:content:tags" /><category term="feed_name_redhat_developer_blog" scheme="searchisko:content:tags" /><category term="Java" scheme="searchisko:content:tags" /><category term="Kubernetes" scheme="searchisko:content:tags" /><category term="microservices" scheme="searchisko:content:tags" /><category term="serverless" scheme="searchisko:content:tags" /><category term="serverless computing" scheme="searchisko:content:tags" /><author><name>Burr Sutter</name></author><id>searchisko:content:id:jbossorg_blog-next_devnation_live_your_journey_to_a_serverless_world_an_introduction_to_serverless_june_7th_12pm_edt</id><updated>2018-06-06T16:00:41Z</updated><published>2018-06-06T16:00:41Z</published><content type="html">&lt;p&gt;&lt;span style="font-weight: 400;"&gt;Join us for the next online DevNation Live on June 7th at 12pm EDT for &lt;/span&gt;&lt;a href="https://onlinexperiences.com/Server.nxp?LASCmd=AI:4;F:APIUTILS!51004&amp;#38;PageID=2C1CF13E-08F4-43A4-B25D-0B38FE3226CF&amp;#38;AffiliateData=blog"&gt;&lt;i&gt;&lt;span style="font-weight: 400;"&gt;Your Journey to a Serverless World—An Introduction to Serverless&lt;/span&gt;&lt;/i&gt;&lt;/a&gt;&lt;span style="font-weight: 400;"&gt;, presented by Kamesh Sampath and hosted by Burr Sutter.  Serverless computing is an emerging architecture that represents a shift in the way developers build and deliver software systems. By removing application infrastructure concerns, development and deployment are simplified, allowing developers to focus on writing code that delivers value.  Additionally, operational costs can be reduced by only consuming resources when needed to respond to application events. &lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;In this session, we’ll learn what serverless is and what it means to a developer. Then, we’ll quickly deploy a serverless platform using &lt;/span&gt;&lt;a href="https://openwhisk.apache.org/"&gt;&lt;span style="font-weight: 400;"&gt;Apache OpenWhisk&lt;/span&gt;&lt;/a&gt;&lt;span style="font-weight: 400;"&gt; on Kubernetes. Using this platform, we’ll demystify which Java&lt;img src="https://s.w.org/images/core/emoji/2.4/72x72/2122.png" alt="™" class="wp-smiley" style="height: 1em; max-height: 1em;" /&gt; programming model you should use in a serverless environment. And finally, we’ll look at tools that can make your serverless journey quick, easy, and productive.&lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;a href="https://onlinexperiences.com/Server.nxp?LASCmd=AI:4;F:APIUTILS!51004&amp;#38;PageID=2C1CF13E-08F4-43A4-B25D-0B38FE3226CF&amp;#38;AffiliateData=blog"&gt;&lt;b&gt;Register now&lt;/b&gt;&lt;/a&gt;&lt;b&gt; and join the live presentation at 12pm EDT, Thursday, June 7th. &lt;/b&gt;&lt;/p&gt; &lt;h2&gt;&lt;b&gt;Session Agenda&lt;/b&gt;&lt;/h2&gt; &lt;p&gt;&lt;span id="more-499617"&gt;&lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;In this session you’ll discover:&lt;/span&gt;&lt;/p&gt; &lt;ol&gt; &lt;li style="font-weight: 400;"&gt;&lt;span style="font-weight: 400;"&gt;What a serverless architecture is and what it means to a developer.&lt;/span&gt;&lt;/li&gt; &lt;li style="font-weight: 400;"&gt;&lt;span style="font-weight: 400;"&gt;Tools that can make your journey into serverless computing quick, easy, and productive.&lt;/span&gt;&lt;/li&gt; &lt;li style="font-weight: 400;"&gt;&lt;span style="font-weight: 400;"&gt;How to deploy a serverless platform using Apache OpenWhisk on Kubernetes.&lt;/span&gt;&lt;/li&gt; &lt;li style="font-weight: 400;"&gt;&lt;span style="font-weight: 400;"&gt;How you can build and deliver functionality with serverless computing.&lt;/span&gt;&lt;/li&gt; &lt;/ol&gt; &lt;h2&gt;&lt;b&gt;About the speaker&lt;/b&gt;&lt;/h2&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;Kamesh Sampath, (@kamesh_sampath) director, Developer Experience, Red Hat&lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;Kamesh Sampath is a Red Hat director of Developer Experience. A major part of Kamesh’s career was in the services industry helping various customers build Java-based solutions. Kamesh is the creator of the vertx-maven-plug-in, and has been an active contributor to the fabric8 project. As an open source developer and contributor, he loves sharing his experience building and deploying Java applications on Kubernetes and OpenShift.&lt;/span&gt;&lt;/p&gt; &lt;h2&gt;&lt;b&gt;DevNation Live Tech Talks&lt;/b&gt;&lt;/h2&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;Check our &lt;/span&gt;&lt;a href="https://developers.redhat.com/events/"&gt;&lt;span style="font-weight: 400;"&gt;developer events&lt;/span&gt;&lt;/a&gt;&lt;span style="font-weight: 400;"&gt; page to find out  what is happening next, such as upcoming &lt;/span&gt;&lt;a href="https://onlinexperiences.com/Server.nxp?LASCmd=AI:4;F:APIUTILS!51004&amp;#38;PageID=2C1CF13E-08F4-43A4-B25D-0B38FE3226CF&amp;#38;AffiliateData=blog"&gt;&lt;span style="font-weight: 400;"&gt;DevNation Live Tech Talks&lt;/span&gt;&lt;/a&gt;&lt;span style="font-weight: 400;"&gt;. You can view over a dozen &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;recorded videos for previous sessions&lt;/span&gt;&lt;span style="font-weight: 400;"&gt;:&lt;/span&gt;&lt;/p&gt; &lt;ul&gt; &lt;li style="font-weight: 400;"&gt;&lt;span style="font-weight: 400;"&gt;May 16: Serverless and Servicefull Applications &amp;#8211; Where Microservices complements Serverless&lt;/span&gt;&lt;/li&gt; &lt;li style="font-weight: 400;"&gt;&lt;span style="font-weight: 400;"&gt;May 2: Jakarta EE: The Future of Java EE&lt;/span&gt;&lt;/li&gt; &lt;li style="font-weight: 400;"&gt;&lt;span style="font-weight: 400;"&gt;April 20: Enterprise Node.js on OpenShift&lt;/span&gt;&lt;/li&gt; &lt;li style="font-weight: 400;"&gt;&lt;span style="font-weight: 400;"&gt;March 14: Camel Riders in the Cloud&lt;/span&gt;&lt;span style="font-weight: 400;"&gt;&lt;br /&gt; &lt;/span&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&lt;b&gt;Don’t forget to &lt;/b&gt;&lt;a href="https://onlinexperiences.com/Server.nxp?LASCmd=AI:4;F:APIUTILS!51004&amp;#38;PageID=2C1CF13E-08F4-43A4-B25D-0B38FE3226CF&amp;#38;AffiliateData=blog"&gt;&lt;b&gt;register now&lt;/b&gt;&lt;/a&gt;&lt;b&gt; and join the live presentation at 12pm EDT, Thursday, June 7th.&lt;/b&gt;&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F06%2F06%2Fnext-devnation-live-your-journey-to-a-serverless-world-an-introduction-to-serverless-june-7th-12pm-edt%2F&amp;#38;linkname=Next%20DevNation%20Live%3A%20Your%20Journey%20to%20a%20Serverless%20World%E2%80%94An%20Introduction%20to%20Serverless%2C%20June%207th%2C%2012pm%20EDT" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F06%2F06%2Fnext-devnation-live-your-journey-to-a-serverless-world-an-introduction-to-serverless-june-7th-12pm-edt%2F&amp;#38;linkname=Next%20DevNation%20Live%3A%20Your%20Journey%20to%20a%20Serverless%20World%E2%80%94An%20Introduction%20to%20Serverless%2C%20June%207th%2C%2012pm%20EDT" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_google_plus" href="https://www.addtoany.com/add_to/google_plus?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F06%2F06%2Fnext-devnation-live-your-journey-to-a-serverless-world-an-introduction-to-serverless-june-7th-12pm-edt%2F&amp;#38;linkname=Next%20DevNation%20Live%3A%20Your%20Journey%20to%20a%20Serverless%20World%E2%80%94An%20Introduction%20to%20Serverless%2C%20June%207th%2C%2012pm%20EDT" title="Google+" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F06%2F06%2Fnext-devnation-live-your-journey-to-a-serverless-world-an-introduction-to-serverless-june-7th-12pm-edt%2F&amp;#38;linkname=Next%20DevNation%20Live%3A%20Your%20Journey%20to%20a%20Serverless%20World%E2%80%94An%20Introduction%20to%20Serverless%2C%20June%207th%2C%2012pm%20EDT" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F06%2F06%2Fnext-devnation-live-your-journey-to-a-serverless-world-an-introduction-to-serverless-june-7th-12pm-edt%2F&amp;#38;linkname=Next%20DevNation%20Live%3A%20Your%20Journey%20to%20a%20Serverless%20World%E2%80%94An%20Introduction%20to%20Serverless%2C%20June%207th%2C%2012pm%20EDT" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F06%2F06%2Fnext-devnation-live-your-journey-to-a-serverless-world-an-introduction-to-serverless-june-7th-12pm-edt%2F&amp;#38;linkname=Next%20DevNation%20Live%3A%20Your%20Journey%20to%20a%20Serverless%20World%E2%80%94An%20Introduction%20to%20Serverless%2C%20June%207th%2C%2012pm%20EDT" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F06%2F06%2Fnext-devnation-live-your-journey-to-a-serverless-world-an-introduction-to-serverless-june-7th-12pm-edt%2F&amp;#38;linkname=Next%20DevNation%20Live%3A%20Your%20Journey%20to%20a%20Serverless%20World%E2%80%94An%20Introduction%20to%20Serverless%2C%20June%207th%2C%2012pm%20EDT" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F06%2F06%2Fnext-devnation-live-your-journey-to-a-serverless-world-an-introduction-to-serverless-june-7th-12pm-edt%2F&amp;#38;linkname=Next%20DevNation%20Live%3A%20Your%20Journey%20to%20a%20Serverless%20World%E2%80%94An%20Introduction%20to%20Serverless%2C%20June%207th%2C%2012pm%20EDT" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F06%2F06%2Fnext-devnation-live-your-journey-to-a-serverless-world-an-introduction-to-serverless-june-7th-12pm-edt%2F&amp;#38;title=Next%20DevNation%20Live%3A%20Your%20Journey%20to%20a%20Serverless%20World%E2%80%94An%20Introduction%20to%20Serverless%2C%20June%207th%2C%2012pm%20EDT" data-a2a-url="https://developers.redhat.com/blog/2018/06/06/next-devnation-live-your-journey-to-a-serverless-world-an-introduction-to-serverless-june-7th-12pm-edt/" data-a2a-title="Next DevNation Live: Your Journey to a Serverless World—An Introduction to Serverless, June 7th, 12pm EDT"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2018/06/06/next-devnation-live-your-journey-to-a-serverless-world-an-introduction-to-serverless-june-7th-12pm-edt/"&gt;Next DevNation Live: Your Journey to a Serverless World—An Introduction to Serverless, June 7th, 12pm EDT&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;RHD Blog&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/9zpX3YYOwUk" height="1" width="1" alt=""/&gt;</content><summary>Join us for the next online DevNation Live on June 7th at 12pm EDT for Your Journey to a Serverless World—An Introduction to Serverless, presented by Kamesh Sampath and hosted by Burr Sutter.  Serverless computing is an emerging architecture that represents a shift in the way developers build and deliver software systems. By removing application infrastructure concerns, development and deployment ...</summary><dc:creator>Burr Sutter</dc:creator><dc:date>2018-06-06T16:00:41Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2018/06/06/next-devnation-live-your-journey-to-a-serverless-world-an-introduction-to-serverless-june-7th-12pm-edt/</feedburner:origLink></entry><entry><title>Monitoring Red Hat AMQ 7 with the jmxtrans Agent</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/yTP5Nna6_-c/" /><category term="broker metrics" scheme="searchisko:content:tags" /><category term="feed_group_name_nonmiddleware" scheme="searchisko:content:tags" /><category term="feed_name_redhat_developer_blog" scheme="searchisko:content:tags" /><category term="integration" scheme="searchisko:content:tags" /><category term="jboss a-mq" scheme="searchisko:content:tags" /><category term="jmxtrans" scheme="searchisko:content:tags" /><category term="messaging" scheme="searchisko:content:tags" /><category term="monitoring" scheme="searchisko:content:tags" /><category term="performance" scheme="searchisko:content:tags" /><category term="Red Hat AMQ" scheme="searchisko:content:tags" /><author><name>Roman Martin Gil</name></author><id>searchisko:content:id:jbossorg_blog-monitoring_red_hat_amq_7_with_the_jmxtrans_agent</id><updated>2018-06-06T11:00:29Z</updated><published>2018-06-06T11:00:29Z</published><content type="html">&lt;h2&gt;Monitoring Red Hat AMQ 7&lt;/h2&gt; &lt;p&gt;Red Hat AMQ 7 includes some tools for monitoring the Red Hat AMQ broker. These tools allow you to get metrics about the performance and behavior of the broker and its resources. Metrics are very important for measuring performance and for identifying issues that are causing poor performance.&lt;/p&gt; &lt;p&gt;The following components are included for monitoring the Red Hat AMQ 7 broker:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Management web console that is based on Hawtio: This console includes some perspectives and dashboards for monitoring the most important components of the broker.&lt;/li&gt; &lt;li&gt;A Jolokia REST-like API: This provides full access to JMX beans through HTTP requests.&lt;/li&gt; &lt;li&gt;Red Hat JBoss Operation Network: This is an enterprise, Java-based administration and management platform for developing, testing, deploying, and monitoring Red Hat JBoss Middleware applications.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;These tools are incredible and fully integrated with the original product. However, there are cases where Red Hat AMQ 7 is deployed in environments where other tools are used to monitor the broker, for example, &lt;code&gt;jmxtrans&lt;/code&gt;.&lt;br /&gt; &lt;span id="more-494547"&gt;&lt;/span&gt;&lt;/p&gt; &lt;div&gt;&lt;a href="http://www.jmxtrans.org/"&gt;jmxtrans&lt;/a&gt; is a popular monitoring tool for Java-based applications. It connects to a JVM via JMX, collects metrics, and sends the data to the back end of your choice. Included in &lt;code&gt;jmxtrans&lt;/code&gt; is an agent to be deployed inside the application that is to be monitored. This blog shows how to integrate the &lt;a href="https://github.com/jmxtrans/jmxtrans-agent"&gt;jmxtrans agent&lt;/a&gt; with Red Hat AMQ 7.&lt;/div&gt; &lt;h2&gt;Set Up Red Hat AMQ 7&lt;/h2&gt; &lt;p&gt;First, you need to get the latest stable version of the &lt;code&gt;jmxtrans&lt;/code&gt; agent. It is possible to get it from the following places:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href="https://github.com/jmxtrans/jmxtrans-agent/releases"&gt;Releases from GitHub repository&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="http://central.maven.org/maven2/org/jmxtrans/agent/jmxtrans-agent/"&gt;Maven Central Repository&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Copy the &lt;code&gt;jmxtrans-agent&lt;/code&gt; JAR file into the &lt;code&gt;$ARTEMIS_INSTANCE/lib&lt;/code&gt; folder.&lt;/p&gt; &lt;p&gt;To load the agent at bootstrap time, you need to modify the &lt;code&gt;artemis&lt;/code&gt; file in the &lt;code&gt;$ARTEMIS_INSTANCE/bin&lt;/code&gt; folder. It defines an environment variable (&lt;code&gt;AMQ_JMSTRANS_AGENT&lt;/code&gt;) to update the startup command line of the broker. This environment variable allows you to configure when to use the &lt;code&gt;jmxtrans&lt;/code&gt; agent:&lt;/p&gt; &lt;pre&gt;# Add jmxtrans agent if [ "$AMQ_JMXTRANX_AGENT" = "true" ]; then   echo "Using jmxtrans agent to collect metrics. Configuration loaded from $ARTEMIS_INSTANCE/etc/jmxtrans-agent.xml"   JMXTRANX_OPTS="-Xbootclasspath/p:$ARTEMIS_INSTANCE/etc -javaagent:$ARTEMIS_INSTANCE/lib/jmxtrans-agent.jar=$ARTEMIS_INSTANCE/etc/jmxtrans-agent.xml" fi&lt;/pre&gt; &lt;p&gt;Next, you should load this configuration with the startup command line defined in the &lt;code&gt;artemis&lt;/code&gt; file, as follows:&lt;/p&gt; &lt;pre&gt;exec "$JAVACMD" \ $JAVA_ARGS \ $JMXTRANX_OPTS -Xbootclasspath/a:"$LOG_MANAGER" \ -Djava.security.auth.login.config="$ARTEMIS_INSTANCE/etc/login.config" \ $ARTEMIS_CLUSTER_PROPS \ -classpath "$CLASSPATH" \ -Dartemis.home="$ARTEMIS_HOME" \ -Dartemis.instance="$ARTEMIS_INSTANCE" \ -Djava.library.path="$ARTEMIS_HOME/bin/lib/linux-$(uname -m)" \ -Djava.io.tmpdir="$ARTEMIS_INSTANCE/tmp" \ -Ddata.dir="$ARTEMIS_DATA_DIR" \ -Djava.util.logging.manager="$ARTEMIS_LOG_MANAGER" \ -Dlogging.configuration="$ARTEMIS_LOGGING_CONF" \ $DEBUG_ARGS \ org.apache.activemq.artemis.boot.Artemis "$@"&lt;/pre&gt; &lt;h3&gt;Defining Queries and Metrics&lt;/h3&gt; &lt;p&gt;The &lt;code&gt;jmstrans&lt;/code&gt; agent allows you to define different queries to collect metrics from JMX beans. These queries are defined in the &lt;code&gt;jmxtrans-agent.xml&lt;/code&gt; file, which is located in the &lt;code&gt;$ARTEMIS_INSTANCE/etc&lt;/code&gt; folder. The queries will define the JMX beans and the attributes to be collected. The following shows a sample to get metrics from addresses and queues.&lt;/p&gt; &lt;pre&gt;&amp;#60;queries&amp;#62; &amp;#60;!-- Addresses --&amp;#62; &amp;#60;query objectName="org.apache.activemq.artemis:broker=*,component=addresses,address=*" attributes="MessageCount,NumberOfMessages,NumberOfPages,QueueNames" resultAlias="service=amq7,host=#hostname#,broker=%broker%,address=%address%,attribute.#attribute#"/&amp;#62; &amp;#60;!-- Queues --&amp;#62; &amp;#60;query objectName="org.apache.activemq.artemis:broker=*,component=addresses,address=*,subcomponent=queues,routing-type=*,queue=*" attributes="ConsumerCount,MaxConsumers,DeliveringCount,MessageCount,MessagesAcknowledged,MessagesAdded,MessagesExpired,MessagesKilled" resultAlias="service=amq7,host=#hostname#,broker=%broker%,address=%address%,queue=%queue%,artemis.addresses.#attribute#"/&amp;#62; &amp;#60;/queries&amp;#62;&lt;/pre&gt; &lt;p&gt;Other queries to get other metrics in the JMX tree are also valid.&lt;/p&gt; &lt;h2&gt;Getting Metrics from the Console&lt;/h2&gt; &lt;p&gt;&lt;code&gt;jmxtrans&lt;/code&gt; includes several output writers to send the collected metrics to external services, for example, as Graphite, CSV files, and InfluxDB. The output writers are defined in the &lt;code&gt;jmxtrans-agent.xml&lt;/code&gt; file as follows:&lt;/p&gt; &lt;pre&gt; &amp;#60;!-- Output Writers --&amp;#62; &amp;#60;outputWriter class="org.jmxtrans.agent.ConsoleOutputWriter" /&amp;#62;&lt;/pre&gt; &lt;p&gt;This block defines the console output writer, so the metrics will be shown as messages in the server console log.&lt;/p&gt; &lt;p&gt;If you now start Red Hat AMQ 7, the output will be similar to this:&lt;/p&gt; &lt;pre&gt;$ export AMQ_JMXTRANX_AGENT=true $ ./bin/artemis run Using jmxtrans agent to collect metrics. Configuration loaded from /opt/amq/brokers/broker01-master/etc/jmxtrans-agent.xml 2018-06-04 17:14:39.103 INFO [main] org.jmxtrans.agent.JmxTransAgent - Starting 'JMX metrics exporter agent: 1.2.8' with configuration '/opt/amq/brokers/broker01-master/etc/jmxtrans-agent.xml'... 2018-06-04 17:14:39.113 INFO [main] org.jmxtrans.agent.JmxTransAgent - PropertiesLoader: Empty Properties Loader 2018-06-04 17:14:39.445 INFO [main] org.jmxtrans.agent.JmxTransExporter - Configuration reload interval: 10secs 2018-06-04 17:14:39.445 INFO [main] org.jmxtrans.agent.JmxTransAgent - JmxTransAgent started with configuration '/opt/amq/brokers/broker01-master/etc/jmxtrans-agent.xml' __ __ ____ ____ _ /\ | \/ |/ __ \ | _ \ | | / \ | \ / | | | | | |_) |_ __ ___ | | _____ _ __ / /\ \ | |\/| | | | | | _ &amp;#60;| '__/ _ \| |/ / _ \ '__| / ____ \| | | | |__| | | |_) | | | (_) | &amp;#60; __/ | /_/ \_\_| |_|\___\_\ |____/|_| \___/|_|\_\___|_| Red Hat JBoss AMQ 7.1.0.GA 2018-06-04 17:14:40,370 INFO [org.apache.activemq.artemis.integration.bootstrap] AMQ101000: Starting ActiveMQ Artemis Server ...&lt;/pre&gt; &lt;p&gt;After some seconds, you can see that the &lt;code&gt;jmxtrans&lt;/code&gt; agent is collecting metrics and exporting them to the console (using the &lt;code&gt;ConsoleOutputWriter&lt;/code&gt;):&lt;/p&gt; &lt;pre&gt;2018-06-04 17:14:43,740 INFO [org.apache.activemq.artemis] AMQ241001: HTTP Server started at http://localhost:8161 2018-06-04 17:14:43,740 INFO [org.apache.activemq.artemis] AMQ241002: Artemis Jolokia REST API available at http://localhost:8161/console/jolokia 2018-06-04 17:14:43,741 INFO [org.apache.activemq.artemis] AMQ241004: Artemis Console available at http://localhost:8161/console service=amq7,host=localhost,broker=0_0_0_0,address=DLQ,attribute.MessageCount 0 1528125286 service=amq7,host=localhost,broker=0_0_0_0,address=DLQ,attribute.NumberOfMessages 0 1528125286 service=amq7,host=localhost,broker=0_0_0_0,address=DLQ,attribute.NumberOfPages 0 1528125286 service=amq7,host=localhost,broker=0_0_0_0,address=DLQ,attribute.QueueNames DLQ 1528125286 service=amq7,host=localhost,broker=0_0_0_0,address=ExpiryQueue,queue=ExpiryQueue,artemis.addresses.ConsumerCount 0 1528125286 service=amq7,host=localhost,broker=0_0_0_0,address=ExpiryQueue,queue=ExpiryQueue,artemis.addresses.MaxConsumers -1 1528125286 service=amq7,host=localhost,broker=0_0_0_0,address=ExpiryQueue,queue=ExpiryQueue,artemis.addresses.DeliveringCount 0 1528125286 service=amq7,host=localhost,broker=0_0_0_0,address=ExpiryQueue,queue=ExpiryQueue,artemis.addresses.MessageCount 0 1528125286 service=amq7,host=localhost,broker=0_0_0_0,address=ExpiryQueue,queue=ExpiryQueue,artemis.addresses.MessagesAcknowledged 0 1528125286 service=amq7,host=localhost,broker=0_0_0_0,address=ExpiryQueue,queue=ExpiryQueue,artemis.addresses.MessagesAdded 0 1528125286 service=amq7,host=localhost,broker=0_0_0_0,address=ExpiryQueue,queue=ExpiryQueue,artemis.addresses.MessagesExpired 0 1528125286 service=amq7,host=localhost,broker=0_0_0_0,address=ExpiryQueue,queue=ExpiryQueue,artemis.addresses.MessagesKilled 0 1528125286 service=amq7,host=localhost,broker=0_0_0_0,address=DLQ,queue=DLQ,artemis.addresses.ConsumerCount 0 1528125286 service=amq7,host=localhost,broker=0_0_0_0,address=DLQ,queue=DLQ,artemis.addresses.MaxConsumers -1 1528125286 service=amq7,host=localhost,broker=0_0_0_0,address=DLQ,queue=DLQ,artemis.addresses.DeliveringCount 0 1528125286 service=amq7,host=localhost,broker=0_0_0_0,address=DLQ,queue=DLQ,artemis.addresses.MessageCount 0 1528125286 service=amq7,host=localhost,broker=0_0_0_0,address=DLQ,queue=DLQ,artemis.addresses.MessagesAcknowledged 0 1528125286 service=amq7,host=localhost,broker=0_0_0_0,address=DLQ,queue=DLQ,artemis.addresses.MessagesAdded 0 1528125286 service=amq7,host=localhost,broker=0_0_0_0,address=DLQ,queue=DLQ,artemis.addresses.MessagesExpired 0 1528125286 service=amq7,host=localhost,broker=0_0_0_0,address=DLQ,queue=DLQ,artemis.addresses.MessagesKilled 0 1528125286&lt;/pre&gt; &lt;h3&gt;Sample jmxtrans-agent.xml File&lt;/h3&gt; &lt;p&gt;The following shows a full sample file for the &lt;code&gt;jmxtrans&lt;/code&gt; agent to be used with Red Hat AMQ 7:&lt;/p&gt; &lt;pre&gt;&amp;#60;jmxtrans-agent&amp;#62; &amp;#60;queries&amp;#62; &amp;#60;!-- ActiveMQ Artemis --&amp;#62; &amp;#60;!-- Addresses --&amp;#62; &amp;#60;query objectName="org.apache.activemq.artemis:broker=*,component=addresses,address=*" attributes="MessageCount,NumberOfMessages,NumberOfPages,QueueNames" resultAlias="service=amq7,host=#hostname#,broker=%broker%,address=%address%,attribute.#attribute#"/&amp;#62; &amp;#60;!-- Queues --&amp;#62; &amp;#60;query objectName="org.apache.activemq.artemis:broker=*,component=addresses,address=*,subcomponent=queues,routing-type=*,queue=*" attributes="ConsumerCount,MaxConsumers,DeliveringCount,MessageCount,MessagesAcknowledged,MessagesAdded,MessagesExpired,MessagesKilled" resultAlias="service=amq7,host=#hostname#,broker=%broker%,address=%address%,queue=%queue%,artemis.addresses.#attribute#"/&amp;#62; &amp;#60;/queries&amp;#62; &amp;#60;!-- Output Writers --&amp;#62; &amp;#60;outputWriter class="org.jmxtrans.agent.ConsoleOutputWriter" /&amp;#62; &amp;#60;!-- Other Properties --&amp;#62; &amp;#60;collectIntervalInSeconds&amp;#62;5&amp;#60;/collectIntervalInSeconds&amp;#62; &amp;#60;reloadConfigurationCheckIntervalInSeconds&amp;#62;60&amp;#60;/reloadConfigurationCheckIntervalInSeconds&amp;#62; &amp;#60;/jmxtrans-agent&amp;#62;&lt;/pre&gt; &lt;h2&gt;References&lt;/h2&gt; &lt;p&gt;More details about how to monitor Red Hat AMQ 7 using &lt;code&gt;jmxtrans&lt;/code&gt; are available here:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href="https://access.redhat.com/documentation/en-us/red_hat_amq/7.1/html-single/using_amq_console/#monitoring_your_amq_deployment"&gt;Monitoring Your AMQ Deployment&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://access.redhat.com/documentation/en-us/red_hat_amq/7.1/html-single/using_amq_broker/index#managing_the_broker_using_jmx"&gt;Managing the Broker Using JMX&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://access.redhat.com/documentation/en-us/red_hat_amq/7.1/html-single/using_jon_with_amq_broker/"&gt;Using JON with AMQ Broker&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://github.com/jmxtrans/jmxtrans/wiki"&gt;jmxtrans Wiki&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://github.com/jmxtrans/jmxtrans-agent/wiki"&gt;jmxtrans agent Wiki&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F06%2F06%2Fmonitoring-red-hat-amq-7-with-the-jmxtrans-agent%2F&amp;#38;linkname=Monitoring%20Red%20Hat%20AMQ%207%20with%20the%20jmxtrans%20Agent" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F06%2F06%2Fmonitoring-red-hat-amq-7-with-the-jmxtrans-agent%2F&amp;#38;linkname=Monitoring%20Red%20Hat%20AMQ%207%20with%20the%20jmxtrans%20Agent" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_google_plus" href="https://www.addtoany.com/add_to/google_plus?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F06%2F06%2Fmonitoring-red-hat-amq-7-with-the-jmxtrans-agent%2F&amp;#38;linkname=Monitoring%20Red%20Hat%20AMQ%207%20with%20the%20jmxtrans%20Agent" title="Google+" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F06%2F06%2Fmonitoring-red-hat-amq-7-with-the-jmxtrans-agent%2F&amp;#38;linkname=Monitoring%20Red%20Hat%20AMQ%207%20with%20the%20jmxtrans%20Agent" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F06%2F06%2Fmonitoring-red-hat-amq-7-with-the-jmxtrans-agent%2F&amp;#38;linkname=Monitoring%20Red%20Hat%20AMQ%207%20with%20the%20jmxtrans%20Agent" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F06%2F06%2Fmonitoring-red-hat-amq-7-with-the-jmxtrans-agent%2F&amp;#38;linkname=Monitoring%20Red%20Hat%20AMQ%207%20with%20the%20jmxtrans%20Agent" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F06%2F06%2Fmonitoring-red-hat-amq-7-with-the-jmxtrans-agent%2F&amp;#38;linkname=Monitoring%20Red%20Hat%20AMQ%207%20with%20the%20jmxtrans%20Agent" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F06%2F06%2Fmonitoring-red-hat-amq-7-with-the-jmxtrans-agent%2F&amp;#38;linkname=Monitoring%20Red%20Hat%20AMQ%207%20with%20the%20jmxtrans%20Agent" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F06%2F06%2Fmonitoring-red-hat-amq-7-with-the-jmxtrans-agent%2F&amp;#38;title=Monitoring%20Red%20Hat%20AMQ%207%20with%20the%20jmxtrans%20Agent" data-a2a-url="https://developers.redhat.com/blog/2018/06/06/monitoring-red-hat-amq-7-with-the-jmxtrans-agent/" data-a2a-title="Monitoring Red Hat AMQ 7 with the jmxtrans Agent"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2018/06/06/monitoring-red-hat-amq-7-with-the-jmxtrans-agent/"&gt;Monitoring Red Hat AMQ 7 with the jmxtrans Agent&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;RHD Blog&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/yTP5Nna6_-c" height="1" width="1" alt=""/&gt;</content><summary>Monitoring Red Hat AMQ 7 Red Hat AMQ 7 includes some tools for monitoring the Red Hat AMQ broker. These tools allow you to get metrics about the performance and behavior of the broker and its resources. Metrics are very important for measuring performance and for identifying issues that are causing poor performance. The following components are included for monitoring the Red Hat AMQ 7 broker: Man...</summary><dc:creator>Roman Martin Gil</dc:creator><dc:date>2018-06-06T11:00:29Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2018/06/06/monitoring-red-hat-amq-7-with-the-jmxtrans-agent/</feedburner:origLink></entry><entry><title>Thanks Great Indian Developer Summit &amp; Voxxed Days Zurich</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/bO2-v-U3Il4/thanks-great-indian-developer-summit.html" /><category term="conference" scheme="searchisko:content:tags" /><category term="feed_group_name_infinispan" scheme="searchisko:content:tags" /><category term="feed_name_infinispan" scheme="searchisko:content:tags" /><author><name>Galder Zamarreño</name></author><id>searchisko:content:id:jbossorg_blog-thanks_great_indian_developer_summit_voxxed_days_zurich</id><updated>2018-06-05T14:00:19Z</updated><published>2018-06-05T14:00:00Z</published><content type="html">&lt;div dir="ltr" style="text-align: left;" trbidi="on"&gt;A few days after &lt;a href="https://blog.infinispan.org/2018/04/danke-javaland-merci-devoxx-france.html"&gt;Devoxx France&lt;/a&gt;, I headed for &lt;a href="http://www.developermarch.com/developersummit/"&gt;Great Indian Developer Summit&lt;/a&gt; in Bangalore where I spoke about handling streaming data on top of a Kubernetes platform. This was a very similar talk to the one I gave at &lt;a href="https://www.jfokus.se/"&gt;JFokus&lt;/a&gt; but with some important changes. Together with Clement we created a small &lt;a href="https://github.com/ReactiveX/RxJava"&gt;RxJava 2&lt;/a&gt; façade for Infinispan. When combined with &lt;a href="https://vertx.io/docs/vertx-rx/java2/"&gt;Vert.x RxJava 2 API&lt;/a&gt;, we could finally have an idiomatic way of handling streaming data asynchronously and coordinating events purely using RxJava 2 APIs. This is crucial for working with streaming data in an efficient way. On top of that, I made some changes to push the binary data used by the demo outside of the deployment.&lt;br /&gt;&lt;br /&gt;Unfortunately Murphy struck during the presentation and I was unable to run the live coding demo. A problem with Docker size image during preparation combined with a cleanup I ran before the talk meant some of the images had to be re-downloaded. The wireless internet connection at the conference nor the mobile connection were good enough for me to recover it. Once back in the hotel where I had a stable connection I was able to record a screencast of the steps I would have followed during the Great Indian Developer Summit talk. You can find this screencast below:&lt;br /&gt;&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;iframe allowfullscreen="" class="YOUTUBE-iframe-video" data-thumbnail-src="https://i.ytimg.com/vi/oU0oduarh94/0.jpg" frameborder="0" height="266" src="https://www.youtube.com/embed/oU0oduarh94?feature=player_embedded" width="320"&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;br /&gt;&lt;br /&gt;The code from the demo can be found&amp;nbsp;&lt;a href="https://github.com/infinispan-demos/streaming-data-kubernetes"&gt;here&lt;/a&gt;. The live coding steps I followed are defined &lt;a href="https://github.com/infinispan-demos/streaming-data-kubernetes/blob/master/live-coding/gids-18.org"&gt;here&lt;/a&gt;. Finally the slides can be found here:&lt;br /&gt;&lt;br /&gt;&lt;script async="" class="speakerdeck-embed" data-id="26bacad4843742888dd7ce76c15f81c5" data-ratio="1.77777777777778" src="//speakerdeck.com/assets/embed.js"&gt;&lt;/script&gt; Finally, for something slightly different, back in March I joined Ray Tsang for a talk at &lt;a href="https://voxxeddays.com/zurich/"&gt;Voxxed Days Zurich&lt;/a&gt;. This was a really fun talk to be part of! We combined past stories of my time at JBoss support with Ray's Kubernetes troubleshooting experience to create an engaging talk :). You can find the video below:&lt;br /&gt;&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;iframe allowfullscreen="" class="YOUTUBE-iframe-video" data-thumbnail-src="https://i.ytimg.com/vi/t8eXXrUZ54Y/0.jpg" frameborder="0" height="266" src="https://www.youtube.com/embed/t8eXXrUZ54Y?feature=player_embedded" width="320"&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;br /&gt;&lt;br /&gt;The week after Sebastian Łaskawiec and I travelled to Red Hat Summit as part of the work we did to integrate Red Hat Data Grid (Infinispan product version) into the Scavenger Hunt game presented on the keynote of the last day. Both Sebastian and I have been working on a blog series which will be published very soon.&lt;br /&gt;&lt;br /&gt;Cheers,&lt;br /&gt;Galder&lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/Infinispan/~4/3R0f_T-aQVg" height="1" width="1" alt=""/&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/bO2-v-U3Il4" height="1" width="1" alt=""/&gt;</content><summary>A few days after Devoxx France, I headed for Great Indian Developer Summit in Bangalore where I spoke about handling streaming data on top of a Kubernetes platform. This was a very similar talk to the one I gave at JFokus but with some important changes. Together with Clement we created a small RxJava 2 façade for Infinispan. When combined with Vert.x RxJava 2 API, we could finally have an idiomat...</summary><dc:creator>Galder Zamarreño</dc:creator><dc:date>2018-06-05T14:00:00Z</dc:date><feedburner:origLink>http://feedproxy.google.com/~r/Infinispan/~3/3R0f_T-aQVg/thanks-great-indian-developer-summit.html</feedburner:origLink></entry><entry><title>How to install Python Flask on Red Hat Enterprise Linux 7.5</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/A9RTsbPJkG4/" /><category term="feed_group_name_nonmiddleware" scheme="searchisko:content:tags" /><category term="feed_name_redhat_developer_blog" scheme="searchisko:content:tags" /><category term="flask" scheme="searchisko:content:tags" /><category term="Frameworks" scheme="searchisko:content:tags" /><category term="microframework" scheme="searchisko:content:tags" /><category term="microservices" scheme="searchisko:content:tags" /><category term="Python" scheme="searchisko:content:tags" /><category term="Python Flask" scheme="searchisko:content:tags" /><category term="Red Hat Enterprise Linux" scheme="searchisko:content:tags" /><category term="rhel" scheme="searchisko:content:tags" /><author><name>Don Schenck</name></author><id>searchisko:content:id:jbossorg_blog-how_to_install_python_flask_on_red_hat_enterprise_linux_7_5</id><updated>2018-06-05T11:00:55Z</updated><published>2018-06-05T11:00:55Z</published><content type="html">&lt;p&gt;I recently got my &lt;a href="https://developers.redhat.com/products/rhel/download/"&gt;zero-dollar developer copy of Red Hat Enterprise Linux&lt;/a&gt; (RHEL, version 7.5) and built a virtual machine (VM) to run it. There it was, on my PC, running in &lt;a href="https://www.virtualbox.org/"&gt;VirtualBox&lt;/a&gt;&amp;#8230;a gleaming, shiny, brand-spanking-new VM running RHEL. Whatever shall I do with it?&lt;/p&gt; &lt;p&gt;Then I got the idea: I&amp;#8217;ll install the &lt;a href="https://developers.redhat.com/products/cdk/overview/"&gt;Red Hat Container Development Kit (CDK)&lt;/a&gt; and build some Python-based containers. I&amp;#8217;ll use &lt;a href="http://flask.pocoo.org/"&gt;Flask&lt;/a&gt;, a terrific microframework that makes building RESTful services easy.&lt;/p&gt; &lt;p&gt;&lt;span id="more-498417"&gt;&lt;/span&gt;&lt;/p&gt; &lt;h2&gt;I Mean&amp;#8230;Obviously&amp;#8230;&lt;/h2&gt; &lt;p&gt;Obviously, installing Flask would be easy. With the confidence that often accompanies ignorance, I went to the command line and typed the simple command &lt;code&gt;pip install flask&lt;/code&gt; and waited for the good news.&lt;/p&gt; &lt;p&gt;Oops.&lt;/p&gt; &lt;p&gt;&lt;img class=" alignnone size-full wp-image-498527 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2018/05/Screen-Shot-2018-05-30-at-2.32.06-PM.png" src="https://developers.redhat.com/blog/wp-content/uploads/2018/05/Screen-Shot-2018-05-30-at-2.32.06-PM.png" alt="" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/05/Screen-Shot-2018-05-30-at-2.32.06-PM.png 646w, https://developers.redhat.com/blog/wp-content/uploads/2018/05/Screen-Shot-2018-05-30-at-2.32.06-PM-300x38.png 300w" sizes="(max-width: 646px) 100vw, 646px" /&gt;&lt;/p&gt; &lt;h2&gt;RHEL is Yummy&lt;/h2&gt; &lt;p&gt;Well, hang on a minute; I&amp;#8217;m on RHEL, so &lt;code&gt;yum&lt;/code&gt; is the package manager (that is, installation utility). Obviously, the correct command is &lt;code&gt;sudo yum install pip&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;&lt;img class=" alignnone size-full wp-image-498537 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2018/05/Screen-Shot-2018-05-30-at-10.41.30-AM-1024x112.png" src="https://developers.redhat.com/blog/wp-content/uploads/2018/05/Screen-Shot-2018-05-30-at-10.41.30-AM-1024x112.png" alt="" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/05/Screen-Shot-2018-05-30-at-10.41.30-AM-1024x112.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2018/05/Screen-Shot-2018-05-30-at-10.41.30-AM-300x33.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2018/05/Screen-Shot-2018-05-30-at-10.41.30-AM-768x84.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2018/05/Screen-Shot-2018-05-30-at-10.41.30-AM.png 1354w" sizes="(max-width: 1024px) 100vw, 1024px" /&gt;&lt;/p&gt; &lt;h2&gt;&lt;code&gt;yum search&lt;/code&gt; to the Rescue&lt;/h2&gt; &lt;p&gt;Frustrated, but not to be defeated, I figured &lt;code&gt;pip&lt;/code&gt;—&lt;a href="https://en.wikipedia.org/wiki/Recursive_acronym#Notable_examples"&gt;a Python utility&lt;/a&gt;—must be part of the Python package for RHEL. I used the command &lt;code&gt;yum search python36&lt;/code&gt; to see if any Python 3.6 packages were available, and voila!&lt;/p&gt; &lt;p&gt;&lt;img class=" alignnone size-full wp-image-498547 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2018/05/Screen-Shot-2018-05-30-at-11.03.07-AM-1024x27.png" src="https://developers.redhat.com/blog/wp-content/uploads/2018/05/Screen-Shot-2018-05-30-at-11.03.07-AM-1024x27.png" alt="" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/05/Screen-Shot-2018-05-30-at-11.03.07-AM-1024x27.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2018/05/Screen-Shot-2018-05-30-at-11.03.07-AM-300x8.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2018/05/Screen-Shot-2018-05-30-at-11.03.07-AM-768x21.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2018/05/Screen-Shot-2018-05-30-at-11.03.07-AM.png 1342w" sizes="(max-width: 1024px) 100vw, 1024px" /&gt;&lt;/p&gt; &lt;p&gt;Aha! A package specifically built by Red Hat. Finally, the install command I was looking for: &lt;code&gt;sudo yum install rh-python36-python-pip.noarch&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;&lt;img class=" alignnone size-full wp-image-498557 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2018/05/Screen-Shot-2018-05-30-at-11.03.25-AM-1024x137.png" src="https://developers.redhat.com/blog/wp-content/uploads/2018/05/Screen-Shot-2018-05-30-at-11.03.25-AM-1024x137.png" alt="" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/05/Screen-Shot-2018-05-30-at-11.03.25-AM-1024x137.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2018/05/Screen-Shot-2018-05-30-at-11.03.25-AM-300x40.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2018/05/Screen-Shot-2018-05-30-at-11.03.25-AM-768x103.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2018/05/Screen-Shot-2018-05-30-at-11.03.25-AM.png 1344w" sizes="(max-width: 1024px) 100vw, 1024px" /&gt;&lt;/p&gt; &lt;h2&gt;I&amp;#8217;m An Enabler&lt;/h2&gt; &lt;p&gt;Now, all I needed to do was enable it in a bash shell session and I&amp;#8217;d be ready to start writing Python code using Flask:&lt;/p&gt; &lt;pre&gt;sudo scl enable rh-python36 bash&lt;/pre&gt; &lt;p&gt;I then immediately ran &lt;code&gt;pip install --upgrade pip&lt;/code&gt; and my &lt;code&gt;pip&lt;/code&gt; installation was updated to version pip-10.0.1.&lt;/p&gt; &lt;p&gt;&lt;img class=" alignnone size-full wp-image-498567 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2018/05/Screen-Shot-2018-05-30-at-11.04.03-AM.png" src="https://developers.redhat.com/blog/wp-content/uploads/2018/05/Screen-Shot-2018-05-30-at-11.04.03-AM.png" alt="" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/05/Screen-Shot-2018-05-30-at-11.04.03-AM.png 892w, https://developers.redhat.com/blog/wp-content/uploads/2018/05/Screen-Shot-2018-05-30-at-11.04.03-AM-300x26.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2018/05/Screen-Shot-2018-05-30-at-11.04.03-AM-768x65.png 768w" sizes="(max-width: 892px) 100vw, 892px" /&gt;&lt;/p&gt; &lt;h2&gt;Ready for Flask&lt;/h2&gt; &lt;p&gt;Now, finally, I could install Flask by running &lt;code&gt;pip install flask&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;&lt;img class=" alignnone size-full wp-image-498577 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2018/05/Screen-Shot-2018-05-30-at-11.04.24-AM.png" src="https://developers.redhat.com/blog/wp-content/uploads/2018/05/Screen-Shot-2018-05-30-at-11.04.24-AM.png" alt="" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/05/Screen-Shot-2018-05-30-at-11.04.24-AM.png 702w, https://developers.redhat.com/blog/wp-content/uploads/2018/05/Screen-Shot-2018-05-30-at-11.04.24-AM-300x32.png 300w" sizes="(max-width: 702px) 100vw, 702px" /&gt;&lt;/p&gt; &lt;p&gt;Success!&lt;/p&gt; &lt;p&gt;&lt;img class=" alignnone size-full wp-image-498587 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2018/05/Screen-Shot-2018-05-30-at-11.04.51-AM-1024x23.png" src="https://developers.redhat.com/blog/wp-content/uploads/2018/05/Screen-Shot-2018-05-30-at-11.04.51-AM-1024x23.png" alt="" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/05/Screen-Shot-2018-05-30-at-11.04.51-AM-1024x23.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2018/05/Screen-Shot-2018-05-30-at-11.04.51-AM-300x7.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2018/05/Screen-Shot-2018-05-30-at-11.04.51-AM-768x17.png 768w" sizes="(max-width: 1024px) 100vw, 1024px" /&gt;&lt;/p&gt; &lt;p&gt;Finally—for real this time—I tested it by creating and running the &lt;code&gt;hello.py&lt;/code&gt; app that&amp;#8217;s featured on &lt;a href="http://flask.pocoo.org/"&gt;the Flask project home page&lt;/a&gt;. It worked.&lt;/p&gt; &lt;h2&gt;Onward!&lt;/h2&gt; &lt;p&gt;I now have Python 3.6 and Flask installed on my RHEL VM. All I need to do now is to install the CDK and I can start building Python microservices.&lt;/p&gt; &lt;p&gt;&amp;#160;&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F06%2F05%2Finstall-python-flask-on-rhel%2F&amp;#38;linkname=How%20to%20install%20Python%20Flask%20on%20Red%20Hat%20Enterprise%20Linux%207.5" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F06%2F05%2Finstall-python-flask-on-rhel%2F&amp;#38;linkname=How%20to%20install%20Python%20Flask%20on%20Red%20Hat%20Enterprise%20Linux%207.5" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_google_plus" href="https://www.addtoany.com/add_to/google_plus?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F06%2F05%2Finstall-python-flask-on-rhel%2F&amp;#38;linkname=How%20to%20install%20Python%20Flask%20on%20Red%20Hat%20Enterprise%20Linux%207.5" title="Google+" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F06%2F05%2Finstall-python-flask-on-rhel%2F&amp;#38;linkname=How%20to%20install%20Python%20Flask%20on%20Red%20Hat%20Enterprise%20Linux%207.5" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F06%2F05%2Finstall-python-flask-on-rhel%2F&amp;#38;linkname=How%20to%20install%20Python%20Flask%20on%20Red%20Hat%20Enterprise%20Linux%207.5" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F06%2F05%2Finstall-python-flask-on-rhel%2F&amp;#38;linkname=How%20to%20install%20Python%20Flask%20on%20Red%20Hat%20Enterprise%20Linux%207.5" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F06%2F05%2Finstall-python-flask-on-rhel%2F&amp;#38;linkname=How%20to%20install%20Python%20Flask%20on%20Red%20Hat%20Enterprise%20Linux%207.5" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F06%2F05%2Finstall-python-flask-on-rhel%2F&amp;#38;linkname=How%20to%20install%20Python%20Flask%20on%20Red%20Hat%20Enterprise%20Linux%207.5" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F06%2F05%2Finstall-python-flask-on-rhel%2F&amp;#38;title=How%20to%20install%20Python%20Flask%20on%20Red%20Hat%20Enterprise%20Linux%207.5" data-a2a-url="https://developers.redhat.com/blog/2018/06/05/install-python-flask-on-rhel/" data-a2a-title="How to install Python Flask on Red Hat Enterprise Linux 7.5"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2018/06/05/install-python-flask-on-rhel/"&gt;How to install Python Flask on Red Hat Enterprise Linux 7.5&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;RHD Blog&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/A9RTsbPJkG4" height="1" width="1" alt=""/&gt;</content><summary>I recently got my zero-dollar developer copy of Red Hat Enterprise Linux (RHEL, version 7.5) and built a virtual machine (VM) to run it. There it was, on my PC, running in VirtualBox…a gleaming, shiny, brand-spanking-new VM running RHEL. Whatever shall I do with it? Then I got the idea: I’ll install the Red Hat Container Development Kit (CDK) and build some Python-based containers. I’ll use Flask,...</summary><dc:creator>Don Schenck</dc:creator><dc:date>2018-06-05T11:00:55Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2018/06/05/install-python-flask-on-rhel/</feedburner:origLink></entry><entry><title>Infinispan 9.3.0.CR1</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/h8V7krVCbLg/infinispan-930cr1.html" /><category term="9.3" scheme="searchisko:content:tags" /><category term="feed_group_name_infinispan" scheme="searchisko:content:tags" /><category term="feed_name_infinispan" scheme="searchisko:content:tags" /><category term="release" scheme="searchisko:content:tags" /><category term="release candidate" scheme="searchisko:content:tags" /><author><name>rigazilla</name></author><id>searchisko:content:id:jbossorg_blog-infinispan_9_3_0_cr1</id><updated>2018-06-04T08:01:07Z</updated><published>2018-06-04T08:01:00Z</published><content type="html">&lt;span style="font-family: inherit;"&gt;&lt;span style="font-size: small;"&gt;Dear Infinispan Community,&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: inherit;"&gt;&lt;span style="font-size: small;"&gt;&lt;br /&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="font-family: inherit;"&gt;&lt;span style="font-size: small;"&gt;we're glad to announce that 9.3.0.CR1 is out!&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span style="font-family: inherit;"&gt;&lt;span style="font-size: small;"&gt;This is the &lt;span style="background-color: transparent; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;"&gt;first release which works with both Java 8 and Java 10. Pre-releases of Java 11 work too. Note that Infinispan still only works in classpath mode.&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span style="font-family: inherit;"&gt;&lt;span style="font-size: small;"&gt;Highlights of this release include:&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;ul&gt;&lt;li&gt;&lt;span style="font-family: inherit;"&gt;&lt;span style="font-size: small;"&gt;&lt;span style="background-color: transparent; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;"&gt;&lt;span style="font-family: inherit;"&gt;&lt;span id="docs-internal-guid-fcf54778-c9b3-e418-2086-683286f85b79" style="background-color: transparent; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;"&gt;Expanded transaction support in Hot Rod, which can now participate in Java transactions via Sync or Xa enlistment. Transaction recovery isn't supported yet.&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: inherit;"&gt;&lt;span style="font-size: small;"&gt;&lt;span style="background-color: transparent; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;"&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span style="font-family: inherit;"&gt;&lt;span style="font-size: small;"&gt;&lt;span style="background-color: transparent; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;"&gt;Caches can now configure the maximum number of attempts to start a CacheWriter/CacheLoader on startup before cache creation fails.&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span style="font-family: inherit;"&gt;&lt;span style="font-size: small;"&gt;&lt;span style="background-color: transparent; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;"&gt;Write-behind stores are now fault-tolerant by default&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span style="font-family: inherit;"&gt;&lt;span style="font-size: small;"&gt;&lt;span style="background-color: transparent; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;"&gt;Segmented On-Heap Data Container improves stream operation performance&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span style="font-family: inherit;"&gt;&lt;span style="font-size: small;"&gt;&lt;span style="background-color: transparent; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;"&gt;We have introduced several WildFly feature packs to make it easier for Infinispan to be utilised on WildFly instances via the &lt;/span&gt;&lt;a href="https://github.com/wildfly/wildfly-build-tools" style="text-decoration: none;"&gt;&lt;span style="background-color: transparent; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: underline; vertical-align: baseline; white-space: pre-wrap;"&gt;Server Provisioning Plugin&lt;/span&gt;&lt;/a&gt;&lt;span style="background-color: transparent; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;"&gt;. The following feature packs have been created:&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;&lt;ul&gt;&lt;li&gt;&lt;span style="font-family: inherit;"&gt;&lt;span style="font-size: small;"&gt;&lt;span style="background-color: transparent; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;"&gt;infinispan-feature-pack-client: all of the modules required to connect to a hotrod server via the client&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span style="font-family: inherit;"&gt;&lt;span style="font-size: small;"&gt;&lt;span style="background-color: transparent; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;"&gt;infinispan-feature-pack-embedded: the modules required for embedded instances of Infinispan&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span style="font-family: inherit;"&gt;&lt;span style="font-size: small;"&gt;&lt;span style="background-color: transparent; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;"&gt;infinispan-feature-pack-embedded-query: the same as above but with query capabilities&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span style="font-family: inherit;"&gt;&lt;span style="font-size: small;"&gt;&lt;span style="background-color: transparent; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;"&gt;infinispan-feature-pack-wf-modules: this is equivalent to the wildfly-modules.zip&lt;/span&gt;&lt;span style="background-color: transparent; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;"&gt;&lt;br class="kix-line-break" /&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;&lt;li&gt;&lt;span style="font-family: inherit;"&gt;&lt;span style="font-size: small;"&gt;&lt;span style="background-color: transparent; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;"&gt;2-Level cache now works with Hibernate ORM 5.3&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span style="font-family: inherit;"&gt;&lt;span style="font-size: small;"&gt;&lt;span style="background-color: transparent; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;"&gt;The server now allows multiple protocols with a Single Port. The initial version supports HTTP/1.1, HTTP/2 and Hot Rod. Switching protocols can be done using TLS/ALPN and HTTP/1.1 Upgrade header.&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span style="font-family: inherit;"&gt;&lt;span style="font-size: small;"&gt;&lt;span style="background-color: transparent; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;"&gt;Admin console - improved all editors (schema, scripts, JSON data) to include syntax highlighting &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span style="font-family: inherit;"&gt;&lt;span style="font-size: small;"&gt;&lt;span style="background-color: transparent; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;"&gt;Component Upgrades: Hibernate Search 5.10 and Hibernate ORM 5.3&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;&lt;span style="font-family: inherit;"&gt;&lt;span style="font-size: small;"&gt;&lt;span style="background-color: transparent; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;"&gt;Numerous bug fixes which improve stability are also included (&lt;a href="https://issues.jboss.org/secure/ReleaseNote.jspa?projectId=12310799&amp;amp;version=12337256"&gt;here&lt;/a&gt; is the full list of the solved issues).&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span style="font-family: inherit;"&gt;&lt;span style="background-color: white; font-size: small;"&gt;As usual, you can find all the bits on our&amp;nbsp;&lt;/span&gt;&lt;span style="font-size: small;"&gt;&lt;a href="http://infinispan.org/download/" style="background-color: white;" target="_blank"&gt;website&lt;/a&gt;&lt;span style="background-color: white;"&gt;. If you find any issues, don't hesitate to report them on our&amp;nbsp;&lt;/span&gt;&lt;a href="https://issues.jboss.org/projects/ISPN" style="background-color: white;" target="_blank"&gt;issue tracker.&lt;/a&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;img src="http://feeds.feedburner.com/~r/Infinispan/~4/nqwoDn1T4_g" height="1" width="1" alt=""/&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/h8V7krVCbLg" height="1" width="1" alt=""/&gt;</content><summary>Dear Infinispan Community, we're glad to announce that 9.3.0.CR1 is out! This is the first release which works with both Java 8 and Java 10. Pre-releases of Java 11 work too. Note that Infinispan still only works in classpath mode. Highlights of this release include: Expanded transaction support in Hot Rod, which can now participate in Java transactions via Sync or Xa enlistment. Transaction recov...</summary><dc:creator>rigazilla</dc:creator><dc:date>2018-06-04T08:01:00Z</dc:date><feedburner:origLink>http://feedproxy.google.com/~r/Infinispan/~3/nqwoDn1T4_g/infinispan-930cr1.html</feedburner:origLink></entry><entry><title>Red Hat Fuse 7 Is Now Available</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/11WfoW8cpdY/" /><category term="Agile Integration" scheme="searchisko:content:tags" /><category term="Announcement" scheme="searchisko:content:tags" /><category term="Camel" scheme="searchisko:content:tags" /><category term="cloud-native apps" scheme="searchisko:content:tags" /><category term="feed_group_name_nonmiddleware" scheme="searchisko:content:tags" /><category term="feed_name_redhat_developer_blog" scheme="searchisko:content:tags" /><category term="FUSE" scheme="searchisko:content:tags" /><category term="Fuse Ignite" scheme="searchisko:content:tags" /><category term="Fuse online" scheme="searchisko:content:tags" /><category term="integration" scheme="searchisko:content:tags" /><category term="JBoss Fuse" scheme="searchisko:content:tags" /><category term="Red Hat Fuse" scheme="searchisko:content:tags" /><author><name>Christina Lin</name></author><id>searchisko:content:id:jbossorg_blog-red_hat_fuse_7_is_now_available</id><updated>2018-06-04T07:00:12Z</updated><published>2018-06-04T07:00:12Z</published><content type="html">&lt;p&gt;Red Hat Fuse 7 (formerly called Red Hat JBoss Fuse) is now officially available. This cloud-native, distributed solution allows developers to easily develop, deploy and scale integration applications. Architects can compose and orchestrate microservices with Red Hat Fuse to introduce agility to the systems. In this release, Fuse also empowers integration experts and business users to become more productive with the self-service low-code platform. With this new agile integration solution, enterprises can now engage in wider collaboration with and among partners at a much quicker pace.&lt;/p&gt; &lt;p&gt;Here&amp;#8217;s where you can download it: &lt;a href="https://developers.redhat.com/products/fuse/download/"&gt;https://developers.redhat.com/products/fuse/download/&lt;/a&gt;.&lt;/p&gt; &lt;h1&gt;What&amp;#8217;s in Fuse 7?&lt;/h1&gt; &lt;p class="separator"&gt;&lt;a href="http://2.bp.blogspot.com/-9E79_vFzxts/Ww110GhueiI/AAAAAAAAFiA/JFISyFzIR4o7ZT-X0tNUmhG74vzPZ3owgCK4BGAYYCw/s1600/Screen%2BShot%2B2018-05-29%2Bat%2B11.45.33%2BAM.png"&gt;&lt;img src="https://2.bp.blogspot.com/-9E79_vFzxts/Ww110GhueiI/AAAAAAAAFiA/JFISyFzIR4o7ZT-X0tNUmhG74vzPZ3owgCK4BGAYYCw/s640/Screen%2BShot%2B2018-05-29%2Bat%2B11.45.33%2BAM.png" width="640" height="256" border="0" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;span id="more-496257"&gt;&lt;/span&gt;&lt;/p&gt; &lt;p&gt;Camel still is the core component in Fuse. Due to the complexity of integration solutions, a pattern-based integration solution is crucial for preventing developers from falling into complex, tangled, and spaghetti-like integration logic. Therefore, pre-built components and pre-defined patterns are always going to be the way to develop integration solutions, regardless of whether they are local or in the cloud.&lt;/p&gt; &lt;p&gt;Narayana is now the transaction technology, to get you ready for handling more-complex distributed transactions.&lt;/p&gt; &lt;p&gt;Jetty is deprecated and replaced by a more streamlined, lightweight web container: Undertow.&lt;/p&gt; &lt;p&gt;One of the most common questions I get from people just getting started with Fuse is, &amp;#8220;Why do you need to have so many different options for runtime?&amp;#8221; It&amp;#8217;s because we believe developers should be able to choose what best suits them, for example:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Spring Boot for microservices&lt;/li&gt; &lt;li&gt;Karaf 4 for OSGi lover&lt;/li&gt; &lt;li&gt;Red Hat JBoss Enterprise Application Platform for Java EE developers&lt;/li&gt; &lt;/ul&gt; &lt;h1&gt;A Cloud-Native Integration Platform&lt;/h1&gt; &lt;p&gt;Building cloud-native applications can be complicated. Integrating them as well as making the integration solution itself be cloud-ready is even more challenging. You need to address the entire software lifecycle as whole, for example, creating applications with a smaller footprint, automating the deployment flow, and monitoring applications in a distributed environment.  Because the Fuse 7 platform&amp;#8217;s features and technology that take care of much of this complexity, integration teams can now focus on the most important thing: the business logic of the integration application.&lt;/p&gt; &lt;p&gt;&lt;b&gt;Lightweight Development&lt;/b&gt;&lt;/p&gt; &lt;p&gt;Building a small-footprint microservice/service is the most fundamental thing when it comes to moving integration into the cloud. Both the Spring Boot and Karaf runtimes are lightweight and microservices-enabled. Developers can take advantage of pattern-based integration in Camel, and plugins help developers package their integration application as a container to be cloud-ready.&lt;/p&gt; &lt;p&gt;&lt;a href="http://4.bp.blogspot.com/-t0lL6-5-Z1w/Ww6lbUhGUAI/AAAAAAAAFiM/TJ5EHgC6adQLm6Fw1BEjP8yWmnlbXLnogCK4BGAYYCw/s1600/Screen%2BShot%2B2018-05-30%2Bat%2B9.21.14%2BAM.png"&gt;&lt;img src="https://4.bp.blogspot.com/-t0lL6-5-Z1w/Ww6lbUhGUAI/AAAAAAAAFiM/TJ5EHgC6adQLm6Fw1BEjP8yWmnlbXLnogCK4BGAYYCw/s640/Screen%2BShot%2B2018-05-30%2Bat%2B9.21.14%2BAM.png" width="640" height="252" border="0" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;b&gt;Hybrid Deployment  &lt;/b&gt;&lt;/p&gt; &lt;p&gt;After deployment, Fuse 7 helps developers to package the application into immutable images. Based on your versioning and deployment strategy, these images can be tagged and sent along to be deployed in different stages of the environment. The platform also takes care of the availability, scalability, and resiliency for the application; scaling up and down the application require just a few clicks in the UI. Or, if you prefer to automate that, you can.  The application not only runs in the cloud, it can also be run as a single, standalone application. All three runtimes are available to run in both scenarios.&lt;/p&gt; &lt;p&gt;&lt;a href="http://4.bp.blogspot.com/-6l0NHGizR6Q/Ww8HSQd1wMI/AAAAAAAAFik/v31J_1Hl_K8ZZV2s2XS5h3sIWRg6zRSpgCK4BGAYYCw/s1600/Screen%2BShot%2B2018-05-30%2Bat%2B4.18.44%2BPM.png"&gt;&lt;img src="https://4.bp.blogspot.com/-6l0NHGizR6Q/Ww8HSQd1wMI/AAAAAAAAFik/v31J_1Hl_K8ZZV2s2XS5h3sIWRg6zRSpgCK4BGAYYCw/s640/Screen%2BShot%2B2018-05-30%2Bat%2B4.18.44%2BPM.png" width="640" height="296" border="0" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;b&gt;Management That Provides a Centralized Application View&lt;/b&gt;&lt;/p&gt; &lt;p&gt;Managing a distributed cloud environment is a nightmare: instead of a couple instances, you now have thousands of individual running instances. Fuse gives you a centralized viewing console in the cloud environment, so it will be much easier to locate all the running Fuse instances. Also, each running application is managed by Red Hat OpenShift, which provides comprehensive features for managing applications in the cloud.&lt;/p&gt; &lt;p&gt;&lt;a href="http://2.bp.blogspot.com/-5vuMgeWbtvA/Ww6nYebQzZI/AAAAAAAAFiY/lmGgxlc1pr0zVc6Dec4b9bawRN1-fLfvACK4BGAYYCw/s1600/Screen%2BShot%2B2018-05-30%2Bat%2B9.29.54%2BAM.png"&gt;&lt;img src="https://2.bp.blogspot.com/-5vuMgeWbtvA/Ww6nYebQzZI/AAAAAAAAFiY/lmGgxlc1pr0zVc6Dec4b9bawRN1-fLfvACK4BGAYYCw/s640/Screen%2BShot%2B2018-05-30%2Bat%2B9.29.54%2BAM.png" width="640" height="290" border="0" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;b&gt;Low-Code Integration for Citizen Integrators&lt;/b&gt;&lt;/p&gt; &lt;p&gt;Another new feature introduced in Fuse 7 is the Red Hat Fuse Online self-service platform, which allows citizen integrators to build integration services on their own. Fuse 7 allows a company to have a single, standardized platform instead of having multiple pieces of technology for different user characteristics, allowing maximum collaboration between developers and citizen integrators. With the intuitive interface and the highly customizable components&amp;#8217; capabilities, citizen integrators can quickly deliver an integration solution without waiting for a developer&amp;#8217;s implementation. And developers can concentrate on developing more-complex integration logic and also package that into the platform so the citizen integrators can re-use it on the fly.&lt;/p&gt; &lt;p&gt;When you log in to the platform, you will be greeted with an overview of all the available integrations and connectors as well as the status of the running integrations.&lt;/p&gt; &lt;p&gt;&lt;a href="http://1.bp.blogspot.com/-VScVy1BY8A8/Ww8xTOYTJcI/AAAAAAAAFiw/dkQqgW8WAZcSg2Qg3w53-ZidQFQRch_yQCK4BGAYYCw/s1600/Screen%2BShot%2B2018-05-30%2Bat%2B7.16.51%2BPM.png"&gt;&lt;img src="https://1.bp.blogspot.com/-VScVy1BY8A8/Ww8xTOYTJcI/AAAAAAAAFiw/dkQqgW8WAZcSg2Qg3w53-ZidQFQRch_yQCK4BGAYYCw/s640/Screen%2BShot%2B2018-05-30%2Bat%2B7.16.51%2BPM.png" width="640" height="358" border="0" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Integrations allow an integrator to create an application by simply dragging and dropping the pre-built connectors or by mapping between input source and output target data.&lt;/p&gt; &lt;p class="separator"&gt;&lt;a href="http://3.bp.blogspot.com/-LNWmeWDvtpI/Ww8yN5OWqbI/AAAAAAAAFi8/3CPUPIFR5-sDOQhw8pIgxBGstdeVPRiZgCK4BGAYYCw/s1600/Screen%2BShot%2B2018-05-30%2Bat%2B7.20.38%2BPM.png"&gt;&lt;img src="https://3.bp.blogspot.com/-LNWmeWDvtpI/Ww8yN5OWqbI/AAAAAAAAFi8/3CPUPIFR5-sDOQhw8pIgxBGstdeVPRiZgCK4BGAYYCw/s640/Screen%2BShot%2B2018-05-30%2Bat%2B7.20.38%2BPM.png" width="640" height="204" border="0" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;a href="http://1.bp.blogspot.com/-BY8QWnfJUxg/Ww8yPOmnLCI/AAAAAAAAFjE/jp1cS7EAggsysvI-UDl6dx8LCQV6MXm2gCK4BGAYYCw/s1600/Screen%2BShot%2B2018-05-30%2Bat%2B7.20.48%2BPM.png"&gt;&lt;img src="https://1.bp.blogspot.com/-BY8QWnfJUxg/Ww8yPOmnLCI/AAAAAAAAFjE/jp1cS7EAggsysvI-UDl6dx8LCQV6MXm2gCK4BGAYYCw/s640/Screen%2BShot%2B2018-05-30%2Bat%2B7.20.48%2BPM.png" width="640" height="216" border="0" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;When there is a need for more-complex process, you can also add customized connectors by simply importing the project package into the system. The customized connectors can be created by the in-house developer or provided online from our open source community.&lt;/p&gt; &lt;p&gt;&lt;a href="http://4.bp.blogspot.com/-EGRk1K_ScWs/Ww83KV31FUI/AAAAAAAAFjU/0hyM9rqiO9UOAfbmY2OLzL23EbYqpYAXQCK4BGAYYCw/s1600/Screen%2BShot%2B2018-05-30%2Bat%2B7.43.15%2BPM.png"&gt;&lt;img src="https://4.bp.blogspot.com/-EGRk1K_ScWs/Ww83KV31FUI/AAAAAAAAFjU/0hyM9rqiO9UOAfbmY2OLzL23EbYqpYAXQCK4BGAYYCw/s640/Screen%2BShot%2B2018-05-30%2Bat%2B7.43.15%2BPM.png" width="640" height="160" border="0" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;h1&gt;Try Fuse 7 Now&lt;/h1&gt; &lt;p&gt;You can try the new version of the platform here:&lt;/p&gt; &lt;p&gt;&lt;a href="https://www.redhat.com/en/explore/fuse-online"&gt;https://www.redhat.com/en/explore/fuse-online&lt;/a&gt;&lt;/p&gt; &lt;p&gt;So what are you waiting for? Start your new Fuse 7 adventure today.&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F06%2F04%2Fred-hat-fuse-7-is-now-available%2F&amp;#38;linkname=Red%20Hat%20Fuse%207%20Is%20Now%20Available" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F06%2F04%2Fred-hat-fuse-7-is-now-available%2F&amp;#38;linkname=Red%20Hat%20Fuse%207%20Is%20Now%20Available" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_google_plus" href="https://www.addtoany.com/add_to/google_plus?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F06%2F04%2Fred-hat-fuse-7-is-now-available%2F&amp;#38;linkname=Red%20Hat%20Fuse%207%20Is%20Now%20Available" title="Google+" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F06%2F04%2Fred-hat-fuse-7-is-now-available%2F&amp;#38;linkname=Red%20Hat%20Fuse%207%20Is%20Now%20Available" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F06%2F04%2Fred-hat-fuse-7-is-now-available%2F&amp;#38;linkname=Red%20Hat%20Fuse%207%20Is%20Now%20Available" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F06%2F04%2Fred-hat-fuse-7-is-now-available%2F&amp;#38;linkname=Red%20Hat%20Fuse%207%20Is%20Now%20Available" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F06%2F04%2Fred-hat-fuse-7-is-now-available%2F&amp;#38;linkname=Red%20Hat%20Fuse%207%20Is%20Now%20Available" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F06%2F04%2Fred-hat-fuse-7-is-now-available%2F&amp;#38;linkname=Red%20Hat%20Fuse%207%20Is%20Now%20Available" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F06%2F04%2Fred-hat-fuse-7-is-now-available%2F&amp;#38;title=Red%20Hat%20Fuse%207%20Is%20Now%20Available" data-a2a-url="https://developers.redhat.com/blog/2018/06/04/red-hat-fuse-7-is-now-available/" data-a2a-title="Red Hat Fuse 7 Is Now Available"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2018/06/04/red-hat-fuse-7-is-now-available/"&gt;Red Hat Fuse 7 Is Now Available&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;RHD Blog&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/11WfoW8cpdY" height="1" width="1" alt=""/&gt;</content><summary>Red Hat Fuse 7 (formerly called Red Hat JBoss Fuse) is now officially available. This cloud-native, distributed solution allows developers to easily develop, deploy and scale integration applications. Architects can compose and orchestrate microservices with Red Hat Fuse to introduce agility to the systems. In this release, Fuse also empowers integration experts and business users to become more p...</summary><dc:creator>Christina Lin</dc:creator><dc:date>2018-06-04T07:00:12Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2018/06/04/red-hat-fuse-7-is-now-available/</feedburner:origLink></entry><entry><title>Red Hat Fuse 7 - Announcing Red Hat Fuse 7 GA!!</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/ppmGBvQ3DHM/red-hat-fuse-7-announcing-red-hat-fuse.html" /><category term="feed_group_name_global" scheme="searchisko:content:tags" /><category term="feed_name_christinalineng" scheme="searchisko:content:tags" /><author><name>Christina Lin</name></author><id>searchisko:content:id:jbossorg_blog-red_hat_fuse_7_announcing_red_hat_fuse_7_ga</id><updated>2018-06-04T13:35:50Z</updated><published>2018-06-04T06:30:00Z</published><content type="html">Red Hat Fuse 7 (formerly called Red Hat JBoss Fuse) is now officially available. This cloud-native, distributed solution allows developers to easily develop, deploy and scale integration applications. Architects can compose and orchestrate microservices with Red Hat Fuse to introduce agility to the systems. In this release, Fuse also&amp;nbsp;empowers integration experts and business users to become more productive with the self-service low-code platform. With this new agile integration solution, enterprises can now engage in wider collaboration with and among partners at a much quicker pace.&lt;br /&gt;Here's where you can download it:&amp;nbsp;&lt;a href="https://developers.redhat.com/products/fuse/download/"&gt;https://developers.redhat.com/products/fuse/download/&lt;/a&gt;.&lt;br /&gt;&lt;h1&gt;What's in Fuse 7?&lt;/h1&gt;&lt;div class="separator"&gt;&lt;a href="http://2.bp.blogspot.com/-9E79_vFzxts/Ww110GhueiI/AAAAAAAAFiA/JFISyFzIR4o7ZT-X0tNUmhG74vzPZ3owgCK4BGAYYCw/s1600/Screen%2BShot%2B2018-05-29%2Bat%2B11.45.33%2BAM.png"&gt;&lt;img border="0" height="256" src="https://2.bp.blogspot.com/-9E79_vFzxts/Ww110GhueiI/AAAAAAAAFiA/JFISyFzIR4o7ZT-X0tNUmhG74vzPZ3owgCK4BGAYYCw/s640/Screen%2BShot%2B2018-05-29%2Bat%2B11.45.33%2BAM.png" width="640" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;Camel still&amp;nbsp;is the core component in Fuse. Due to the complexity&amp;nbsp;of integration solutions, a pattern-based integration solution is crucial for preventing developers from falling into complex, tangled, and spaghetti-like integration logic. Therefore, pre-built components and pre-defined patterns are always going to be the way to develop integration solutions, regardless of whether they are local or in the cloud.&lt;br /&gt;Narayana is now the transaction technology, to get you ready for handling more-complex distributed transactions.&lt;br /&gt;Jetty is deprecated and replaced by a more streamlined, lightweight web container: Undertow.&lt;br /&gt;One of the most common questions I get from people just getting started with Fuse is, "Why do you need to have so many different options for runtime?" It's because we believe developers should be able to choose what best suits them, for example:&lt;br /&gt;&lt;ul&gt;&lt;li&gt;Spring Boot for microservices&lt;/li&gt;&lt;li&gt;Karaf 4 for OSGi lover&lt;/li&gt;&lt;li&gt;Red Hat JBoss Enterprise Application Platform for Java EE developers&lt;/li&gt;&lt;/ul&gt;&lt;h1&gt;A Cloud-Native Integration Platform&lt;/h1&gt;Building cloud-native applications can be complicated. Integrating them as well as making the integration solution itself be cloud-ready is even more challenging.&amp;nbsp;You need to address the entire software lifecycle as whole, for example, creating applications with a&amp;nbsp;smaller footprint, automating the deployment flow, and monitoring applications in a distributed environment. &amp;nbsp;Because the Fuse 7 platform's features and technology that take care of much of this&amp;nbsp;complexity, integration teams can now focus on the most important thing: the business logic of the integration application.&lt;br /&gt;&lt;b&gt;Lightweight Development&lt;/b&gt;&lt;br /&gt;Building a small-footprint microservice/service is the most fundamental thing when it comes to moving integration into the cloud. Both the Spring Boot and Karaf runtimes are lightweight and microservices-enabled. Developers can take advantage of pattern-based integration in Camel, and plugins help developers package their integration application as a container to be cloud-ready.&lt;br /&gt;&lt;a href="http://4.bp.blogspot.com/-t0lL6-5-Z1w/Ww6lbUhGUAI/AAAAAAAAFiM/TJ5EHgC6adQLm6Fw1BEjP8yWmnlbXLnogCK4BGAYYCw/s1600/Screen%2BShot%2B2018-05-30%2Bat%2B9.21.14%2BAM.png"&gt;&lt;img border="0" height="252" src="https://4.bp.blogspot.com/-t0lL6-5-Z1w/Ww6lbUhGUAI/AAAAAAAAFiM/TJ5EHgC6adQLm6Fw1BEjP8yWmnlbXLnogCK4BGAYYCw/s640/Screen%2BShot%2B2018-05-30%2Bat%2B9.21.14%2BAM.png" width="640" /&gt;&lt;/a&gt;&lt;br /&gt;&lt;b&gt;Hybrid Deployment &amp;nbsp;&lt;/b&gt;&lt;br /&gt;After deployment, Fuse 7 helps developers to package the application into immutable images. Based on your versioning and deployment strategy, these images can be tagged and sent along to be deployed in different stages of the&amp;nbsp;environment. The platform also takes care of the availability, scalability, and resiliency for the application; scaling up and down the application require just a few clicks in the UI. Or, if you prefer to automate that, you can.&amp;nbsp; The application not only runs in the cloud, it can also be run as a single, standalone application. All three runtimes are available to run in both scenarios.&lt;br /&gt;&lt;a href="http://4.bp.blogspot.com/-6l0NHGizR6Q/Ww8HSQd1wMI/AAAAAAAAFik/v31J_1Hl_K8ZZV2s2XS5h3sIWRg6zRSpgCK4BGAYYCw/s1600/Screen%2BShot%2B2018-05-30%2Bat%2B4.18.44%2BPM.png"&gt;&lt;img border="0" height="296" src="https://4.bp.blogspot.com/-6l0NHGizR6Q/Ww8HSQd1wMI/AAAAAAAAFik/v31J_1Hl_K8ZZV2s2XS5h3sIWRg6zRSpgCK4BGAYYCw/s640/Screen%2BShot%2B2018-05-30%2Bat%2B4.18.44%2BPM.png" width="640" /&gt;&lt;/a&gt;&lt;br /&gt;&lt;b&gt;Management That Provides a Centralized Application View&lt;/b&gt;&lt;br /&gt;Managing a distributed cloud environment is a nightmare: instead of a couple instances, you now have thousands of individual running instances. Fuse gives you a centralized viewing console in the cloud environment, so it will be much easier to locate all the running Fuse instances. Also, each running application is managed by Red Hat OpenShift, which provides comprehensive features for managing applications in the cloud.&lt;br /&gt;&lt;a href="http://2.bp.blogspot.com/-5vuMgeWbtvA/Ww6nYebQzZI/AAAAAAAAFiY/lmGgxlc1pr0zVc6Dec4b9bawRN1-fLfvACK4BGAYYCw/s1600/Screen%2BShot%2B2018-05-30%2Bat%2B9.29.54%2BAM.png"&gt;&lt;img border="0" height="290" src="https://2.bp.blogspot.com/-5vuMgeWbtvA/Ww6nYebQzZI/AAAAAAAAFiY/lmGgxlc1pr0zVc6Dec4b9bawRN1-fLfvACK4BGAYYCw/s640/Screen%2BShot%2B2018-05-30%2Bat%2B9.29.54%2BAM.png" width="640" /&gt;&lt;/a&gt;&lt;br /&gt;&lt;b&gt;Low-Code Integration for Citizen Integrators&lt;/b&gt;&lt;br /&gt;Another new feature introduced in Fuse 7 is the Red Hat Fuse Online self-service platform, which allows citizen&amp;nbsp;integrators to build integration services on their own. Fuse 7 allows a&amp;nbsp;company to have a single, standardized platform instead of having multiple pieces of technology for different user characteristics, allowing maximum collaboration between developers and citizen integrators. With the intuitive interface&amp;nbsp;and the highly customizable components' capabilities, citizen integrators can quickly deliver an integration solution without waiting for a developer's implementation. And developers can concentrate on developing more-complex integration logic and also package that into the platform so the&amp;nbsp;citizen integrators can re-use it on the fly.&lt;br /&gt;When you log in to the platform, you will be greeted with an overview of all the available integrations and connectors as well as the status of the running integrations.&lt;br /&gt;&lt;a href="http://1.bp.blogspot.com/-VScVy1BY8A8/Ww8xTOYTJcI/AAAAAAAAFiw/dkQqgW8WAZcSg2Qg3w53-ZidQFQRch_yQCK4BGAYYCw/s1600/Screen%2BShot%2B2018-05-30%2Bat%2B7.16.51%2BPM.png"&gt;&lt;img border="0" height="358" src="https://1.bp.blogspot.com/-VScVy1BY8A8/Ww8xTOYTJcI/AAAAAAAAFiw/dkQqgW8WAZcSg2Qg3w53-ZidQFQRch_yQCK4BGAYYCw/s640/Screen%2BShot%2B2018-05-30%2Bat%2B7.16.51%2BPM.png" width="640" /&gt;&lt;/a&gt;&lt;br /&gt;Integrations allow an integrator to create an application by simply dragging and dropping the pre-built connectors&amp;nbsp;or by mapping between input source and output target data.&lt;br /&gt;&lt;div class="separator"&gt;&lt;a href="http://3.bp.blogspot.com/-LNWmeWDvtpI/Ww8yN5OWqbI/AAAAAAAAFi8/3CPUPIFR5-sDOQhw8pIgxBGstdeVPRiZgCK4BGAYYCw/s1600/Screen%2BShot%2B2018-05-30%2Bat%2B7.20.38%2BPM.png"&gt;&lt;img border="0" height="204" src="https://3.bp.blogspot.com/-LNWmeWDvtpI/Ww8yN5OWqbI/AAAAAAAAFi8/3CPUPIFR5-sDOQhw8pIgxBGstdeVPRiZgCK4BGAYYCw/s640/Screen%2BShot%2B2018-05-30%2Bat%2B7.20.38%2BPM.png" width="640" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;a href="http://1.bp.blogspot.com/-BY8QWnfJUxg/Ww8yPOmnLCI/AAAAAAAAFjE/jp1cS7EAggsysvI-UDl6dx8LCQV6MXm2gCK4BGAYYCw/s1600/Screen%2BShot%2B2018-05-30%2Bat%2B7.20.48%2BPM.png"&gt;&lt;img border="0" height="216" src="https://1.bp.blogspot.com/-BY8QWnfJUxg/Ww8yPOmnLCI/AAAAAAAAFjE/jp1cS7EAggsysvI-UDl6dx8LCQV6MXm2gCK4BGAYYCw/s640/Screen%2BShot%2B2018-05-30%2Bat%2B7.20.48%2BPM.png" width="640" /&gt;&lt;/a&gt;&lt;br /&gt;When there is a need for more-complex process, you can also add customized connectors by simply importing the project package into the system. The customized connectors can be created by the in-house developer or provided online from our open source community.&lt;br /&gt;&lt;a href="http://4.bp.blogspot.com/-EGRk1K_ScWs/Ww83KV31FUI/AAAAAAAAFjU/0hyM9rqiO9UOAfbmY2OLzL23EbYqpYAXQCK4BGAYYCw/s1600/Screen%2BShot%2B2018-05-30%2Bat%2B7.43.15%2BPM.png"&gt;&lt;img border="0" height="160" src="https://4.bp.blogspot.com/-EGRk1K_ScWs/Ww83KV31FUI/AAAAAAAAFjU/0hyM9rqiO9UOAfbmY2OLzL23EbYqpYAXQCK4BGAYYCw/s640/Screen%2BShot%2B2018-05-30%2Bat%2B7.43.15%2BPM.png" width="640" /&gt;&lt;/a&gt;&lt;br /&gt;&lt;h1&gt;Try Fuse 7 Now&lt;/h1&gt;You can try the new version of the platform here:&lt;br /&gt;&lt;a href="https://www.redhat.com/en/explore/fuse-online"&gt;https://www.redhat.com/en/explore/fuse-online&lt;/a&gt;&lt;br /&gt;So what are you waiting for? Start your new Fuse 7 adventure today.&lt;img src="http://feeds.feedburner.com/~r/blogspot/hFXzh/~4/JWPlMue5Uuo" height="1" width="1" alt=""/&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/ppmGBvQ3DHM" height="1" width="1" alt=""/&gt;</content><summary>Red Hat Fuse 7 (formerly called Red Hat JBoss Fuse) is now officially available. This cloud-native, distributed solution allows developers to easily develop, deploy and scale integration applications. Architects can compose and orchestrate microservices with Red Hat Fuse to introduce agility to the systems. In this release, Fuse also empowers integration experts and business users to become more p...</summary><dc:creator>Christina Lin</dc:creator><dc:date>2018-06-04T06:30:00Z</dc:date><feedburner:origLink>http://feedproxy.google.com/~r/blogspot/hFXzh/~3/JWPlMue5Uuo/red-hat-fuse-7-announcing-red-hat-fuse.html</feedburner:origLink></entry><entry><title>The best way to write a Hibernate ORM issue test case</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/nf1zqBu19TI/" /><category term="Discussions" scheme="searchisko:content:tags" /><category term="feed_group_name_hibernate" scheme="searchisko:content:tags" /><category term="feed_name_inrelationto" scheme="searchisko:content:tags" /><category term="Hibernate ORM" scheme="searchisko:content:tags" /><author><name>Vlad Mihalcea</name></author><id>searchisko:content:id:jbossorg_blog-the_best_way_to_write_a_hibernate_orm_issue_test_case</id><updated>2018-06-05T08:30:29Z</updated><published>2018-06-04T00:00:00Z</published><content type="html">&lt;div id="preamble"&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;A while ago, I wrote &lt;a href="http://in.relation.to/2016/01/14/hibernate-jpa-test-case-template/"&gt;this article&lt;/a&gt; on the Hibernate blog which shows you how to create a test case which reproduces a certain Hibernate ORM issue.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;In the meanwhile, I came to realize that there is a much better way which I will explain in this article.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect1"&gt; &lt;h2 id="the-hibernate-test-case-templates-drawbacks"&gt;&lt;a class="anchor" href="#the-hibernate-test-case-templates-drawbacks"&gt;&lt;/a&gt;The hibernate-test-case-templates drawbacks&lt;/h2&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Although the &lt;a href="https://github.com/hibernate/hibernate-test-case-templates"&gt;&lt;code&gt;hibernate-test-case-templates&lt;/code&gt;&lt;/a&gt; is much better than having to come up with your own test case and figure out the bootstrapping part, there are several drawbacks to it:&lt;/p&gt; &lt;/div&gt; &lt;div class="ulist"&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;Being hosted on GitHub, some developers submit their test cases as Pull Requests for the &lt;code&gt;hibernate-test-case-templates&lt;/code&gt; instead of attaching them to the associate Hibernate JIRA issue.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;As a developer, you won’t benefit from our &lt;code&gt;doInJPA&lt;/code&gt; or &lt;code&gt;doInHibernate&lt;/code&gt; utilities we have developed for the Hibernate ORM suite of tests.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Replicating a test case across various databases requires manually changing the database connectivity configuration properties.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;The Hibernate ORM developers need to download the test case from the JIRA issue and manually integrate it to the Hibernate ORM project. However, this also means we cannot attribute the original work to the test case author.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect1"&gt; &lt;h2 id="the-alternative"&gt;&lt;a class="anchor" href="#the-alternative"&gt;&lt;/a&gt;The alternative&lt;/h2&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;One alternative which could work better for both Hibernate ORM clients and the core developers is if test cases are submitted as Pull Requests for the &lt;code&gt;hibernate-orm&lt;/code&gt; project itself.&lt;/p&gt; &lt;/div&gt; &lt;div class="sect2"&gt; &lt;h3 id="forking-the-repository"&gt;&lt;a class="anchor" href="#forking-the-repository"&gt;&lt;/a&gt;Forking the repository&lt;/h3&gt; &lt;div class="paragraph"&gt; &lt;p&gt;First, you need to fork the &lt;a href="https://github.com/hibernate/hibernate-orm"&gt;&lt;code&gt;hibernate-orm&lt;/code&gt;&lt;/a&gt; repository on GitHub.&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="http://in.relation.to/images/testcase/GitHubFork.png" alt="GitHub repository fork, align=" width="center" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;That’s exactly how anyone contributing to the Hibernate ORM project work.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect2"&gt; &lt;h3 id="setting-up-the-project"&gt;&lt;a class="anchor" href="#setting-up-the-project"&gt;&lt;/a&gt;Setting up the project&lt;/h3&gt; &lt;div class="paragraph"&gt; &lt;p&gt;You can find a very detailed explanation of how you can setup and build the &lt;code&gt;hibernate-orm&lt;/code&gt; project on &lt;a href="https://github.com/hibernate/hibernate-orm"&gt;the main GitHub&lt;/a&gt; page.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;If you are using IntelliJ IDEA is as simple as importing the project from Gradle.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect2"&gt; &lt;h3 id="creating-the-test-case"&gt;&lt;a class="anchor" href="#creating-the-test-case"&gt;&lt;/a&gt;Creating the test case&lt;/h3&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Now that you have set up the &lt;code&gt;hibernate-orm&lt;/code&gt; project, to create a test case you should extend from one of these two base classes:&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;&lt;code&gt;BaseEntityManagerFunctionalTestCase&lt;/code&gt;::For JPA-based test cases. &lt;code&gt;BaseNonConfigCoreFunctionalTestCase&lt;/code&gt;::For test cases requiring the Hibernate-specific bootstrap mechanism.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Let’s assume we want to create a test case for the &lt;a href="https://hibernate.atlassian.net/browse/HHH-12561"&gt;HHH-12561&lt;/a&gt; JIRA issue.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;The first thing we need to do is to create a new branch:&lt;/p&gt; &lt;/div&gt; &lt;div class="listingblock"&gt; &lt;div class="content"&gt; &lt;pre class="CodeRay highlight"&gt;&lt;code data-lang="bash"&gt;git checkout -b HHH-12561&lt;/code&gt;&lt;/pre&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;The test case can look as follows:&lt;/p&gt; &lt;/div&gt; &lt;div class="listingblock"&gt; &lt;div class="content"&gt; &lt;pre class="CodeRay highlight"&gt;&lt;code data-lang="java"&gt;&lt;span style="color:#007"&gt;@TestForIssue&lt;/span&gt;( JIRAKey = &lt;span style="background-color:hsla(0,100%,50%,0.05)"&gt;&lt;span style="color:#710"&gt;"&lt;/span&gt;&lt;span style="color:#D20"&gt;HHH-12561&lt;/span&gt;&lt;span style="color:#710"&gt;"&lt;/span&gt;&lt;/span&gt; ) &lt;span style="color:#088;font-weight:bold"&gt;public&lt;/span&gt; &lt;span style="color:#339;font-weight:bold"&gt;class&lt;/span&gt; &lt;span style="color:#B06;font-weight:bold"&gt;GlobalQuotedIdentifiersBulkIdTest&lt;/span&gt; &lt;span style="color:#088;font-weight:bold"&gt;extends&lt;/span&gt; BaseEntityManagerFunctionalTestCase { &lt;span style="color:#007"&gt;@Override&lt;/span&gt; &lt;span style="color:#088;font-weight:bold"&gt;protected&lt;/span&gt; &lt;span style="color:#0a8;font-weight:bold"&gt;Class&lt;/span&gt;&amp;lt;?&amp;gt;&lt;span style="color:#339;font-weight:bold"&gt;[]&lt;/span&gt; getAnnotatedClasses() { &lt;span style="color:#080;font-weight:bold"&gt;return&lt;/span&gt; &lt;span style="color:#080;font-weight:bold"&gt;new&lt;/span&gt; &lt;span style="color:#0a8;font-weight:bold"&gt;Class&lt;/span&gt;&amp;lt;?&amp;gt;&lt;span style="color:#339;font-weight:bold"&gt;[]&lt;/span&gt; { Person.class, Doctor.class, Engineer.class }; } &lt;span style="color:#007"&gt;@Override&lt;/span&gt; &lt;span style="color:#088;font-weight:bold"&gt;protected&lt;/span&gt; &lt;span style="color:#339;font-weight:bold"&gt;void&lt;/span&gt; addConfigOptions(&lt;span style="color:#0a8;font-weight:bold"&gt;Map&lt;/span&gt; options) { options.put( AvailableSettings.GLOBALLY_QUOTED_IDENTIFIERS, &lt;span style="color:#0a8;font-weight:bold"&gt;Boolean&lt;/span&gt;.TRUE ); options.put( AvailableSettings.HQL_BULK_ID_STRATEGY, InlineIdsOrClauseBulkIdStrategy.class.getName() ); } &lt;span style="color:#007"&gt;@Before&lt;/span&gt; &lt;span style="color:#088;font-weight:bold"&gt;public&lt;/span&gt; &lt;span style="color:#339;font-weight:bold"&gt;void&lt;/span&gt; setUp() { doInJPA( &lt;span style="color:#950"&gt;this&lt;/span&gt;::entityManagerFactory, entityManager -&amp;gt; { &lt;span style="color:#080;font-weight:bold"&gt;for&lt;/span&gt; ( &lt;span style="color:#339;font-weight:bold"&gt;int&lt;/span&gt; i = &lt;span style="color:#00D"&gt;0&lt;/span&gt;; i &amp;lt; entityCount(); i++ ) { Doctor doctor = &lt;span style="color:#080;font-weight:bold"&gt;new&lt;/span&gt; Doctor(); doctor.setEmployed( ( i % &lt;span style="color:#00D"&gt;2&lt;/span&gt; ) == &lt;span style="color:#00D"&gt;0&lt;/span&gt; ); doctor.setEmployedOn( &lt;span style="color:#0a8;font-weight:bold"&gt;Timestamp&lt;/span&gt;.valueOf( &lt;span style="background-color:hsla(0,100%,50%,0.05)"&gt;&lt;span style="color:#710"&gt;"&lt;/span&gt;&lt;span style="color:#D20"&gt;2018-06-01 00:00:00&lt;/span&gt;&lt;span style="color:#710"&gt;"&lt;/span&gt;&lt;/span&gt; ) ); entityManager.persist( doctor ); } &lt;span style="color:#080;font-weight:bold"&gt;for&lt;/span&gt; ( &lt;span style="color:#339;font-weight:bold"&gt;int&lt;/span&gt; i = &lt;span style="color:#00D"&gt;0&lt;/span&gt;; i &amp;lt; entityCount(); i++ ) { Engineer engineer = &lt;span style="color:#080;font-weight:bold"&gt;new&lt;/span&gt; Engineer(); engineer.setEmployed( ( i % &lt;span style="color:#00D"&gt;2&lt;/span&gt; ) == &lt;span style="color:#00D"&gt;0&lt;/span&gt; ); engineer.setEmployedOn( &lt;span style="color:#0a8;font-weight:bold"&gt;Timestamp&lt;/span&gt;.valueOf( &lt;span style="background-color:hsla(0,100%,50%,0.05)"&gt;&lt;span style="color:#710"&gt;"&lt;/span&gt;&lt;span style="color:#D20"&gt;2018-06-01 00:00:00&lt;/span&gt;&lt;span style="color:#710"&gt;"&lt;/span&gt;&lt;/span&gt; ) ); engineer.setFellow( ( i % &lt;span style="color:#00D"&gt;2&lt;/span&gt; ) == &lt;span style="color:#00D"&gt;1&lt;/span&gt; ); entityManager.persist( engineer ); } }); } &lt;span style="color:#088;font-weight:bold"&gt;protected&lt;/span&gt; &lt;span style="color:#339;font-weight:bold"&gt;int&lt;/span&gt; entityCount() { &lt;span style="color:#080;font-weight:bold"&gt;return&lt;/span&gt; &lt;span style="color:#00D"&gt;5&lt;/span&gt;; } &lt;span style="color:#007"&gt;@Test&lt;/span&gt; &lt;span style="color:#088;font-weight:bold"&gt;public&lt;/span&gt; &lt;span style="color:#339;font-weight:bold"&gt;void&lt;/span&gt; testBulkUpdate() { doInJPA( &lt;span style="color:#950"&gt;this&lt;/span&gt;::entityManagerFactory, entityManager -&amp;gt; { &lt;span style="color:#339;font-weight:bold"&gt;int&lt;/span&gt; updateCount = entityManager.createQuery( &lt;span style="background-color:hsla(0,100%,50%,0.05)"&gt;&lt;span style="color:#710"&gt;"&lt;/span&gt;&lt;span style="color:#D20"&gt;UPDATE Person u &lt;/span&gt;&lt;span style="color:#710"&gt;"&lt;/span&gt;&lt;/span&gt; + &lt;span style="background-color:hsla(0,100%,50%,0.05)"&gt;&lt;span style="color:#710"&gt;"&lt;/span&gt;&lt;span style="color:#D20"&gt;SET u.employedOn = :date &lt;/span&gt;&lt;span style="color:#710"&gt;"&lt;/span&gt;&lt;/span&gt; + &lt;span style="background-color:hsla(0,100%,50%,0.05)"&gt;&lt;span style="color:#710"&gt;"&lt;/span&gt;&lt;span style="color:#D20"&gt;WHERE u.id IN :userIds&lt;/span&gt;&lt;span style="color:#710"&gt;"&lt;/span&gt;&lt;/span&gt; ) .setParameter( &lt;span style="background-color:hsla(0,100%,50%,0.05)"&gt;&lt;span style="color:#710"&gt;"&lt;/span&gt;&lt;span style="color:#D20"&gt;date&lt;/span&gt;&lt;span style="color:#710"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span style="color:#0a8;font-weight:bold"&gt;Timestamp&lt;/span&gt;.valueOf( &lt;span style="background-color:hsla(0,100%,50%,0.05)"&gt;&lt;span style="color:#710"&gt;"&lt;/span&gt;&lt;span style="color:#D20"&gt;2018-06-03 00:00:00&lt;/span&gt;&lt;span style="color:#710"&gt;"&lt;/span&gt;&lt;/span&gt; ) ) .setParameter( &lt;span style="background-color:hsla(0,100%,50%,0.05)"&gt;&lt;span style="color:#710"&gt;"&lt;/span&gt;&lt;span style="color:#D20"&gt;userIds&lt;/span&gt;&lt;span style="color:#710"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span style="color:#0a8;font-weight:bold"&gt;Arrays&lt;/span&gt;.asList(&lt;span style="color:#00D"&gt;1L&lt;/span&gt;, &lt;span style="color:#00D"&gt;2L&lt;/span&gt;, &lt;span style="color:#00D"&gt;3L&lt;/span&gt; ) ) .executeUpdate(); assertEquals(&lt;span style="color:#00D"&gt;3&lt;/span&gt;, updateCount); }); } &lt;span style="color:#007"&gt;@Entity&lt;/span&gt;(name = &lt;span style="background-color:hsla(0,100%,50%,0.05)"&gt;&lt;span style="color:#710"&gt;"&lt;/span&gt;&lt;span style="color:#D20"&gt;Person&lt;/span&gt;&lt;span style="color:#710"&gt;"&lt;/span&gt;&lt;/span&gt;) &lt;span style="color:#007"&gt;@Inheritance&lt;/span&gt;(strategy = InheritanceType.JOINED) &lt;span style="color:#088;font-weight:bold"&gt;public&lt;/span&gt; &lt;span style="color:#088;font-weight:bold"&gt;static&lt;/span&gt; &lt;span style="color:#339;font-weight:bold"&gt;class&lt;/span&gt; &lt;span style="color:#B06;font-weight:bold"&gt;Person&lt;/span&gt; { &lt;span style="color:#007"&gt;@Id&lt;/span&gt; &lt;span style="color:#007"&gt;@GeneratedValue&lt;/span&gt; &lt;span style="color:#088;font-weight:bold"&gt;private&lt;/span&gt; &lt;span style="color:#0a8;font-weight:bold"&gt;Long&lt;/span&gt; id; &lt;span style="color:#088;font-weight:bold"&gt;private&lt;/span&gt; &lt;span style="color:#0a8;font-weight:bold"&gt;String&lt;/span&gt; name; &lt;span style="color:#088;font-weight:bold"&gt;private&lt;/span&gt; &lt;span style="color:#339;font-weight:bold"&gt;boolean&lt;/span&gt; employed; &lt;span style="color:#007"&gt;@Temporal&lt;/span&gt;( TemporalType.TIMESTAMP ) &lt;span style="color:#088;font-weight:bold"&gt;private&lt;/span&gt; &lt;span style="color:#0a8;font-weight:bold"&gt;Date&lt;/span&gt; employedOn; &lt;span style="color:#777"&gt;//Getters and setters omitted for brevity&lt;/span&gt; } &lt;span style="color:#007"&gt;@Entity&lt;/span&gt;(name = &lt;span style="background-color:hsla(0,100%,50%,0.05)"&gt;&lt;span style="color:#710"&gt;"&lt;/span&gt;&lt;span style="color:#D20"&gt;Doctor&lt;/span&gt;&lt;span style="color:#710"&gt;"&lt;/span&gt;&lt;/span&gt;) &lt;span style="color:#088;font-weight:bold"&gt;public&lt;/span&gt; &lt;span style="color:#088;font-weight:bold"&gt;static&lt;/span&gt; &lt;span style="color:#339;font-weight:bold"&gt;class&lt;/span&gt; &lt;span style="color:#B06;font-weight:bold"&gt;Doctor&lt;/span&gt; &lt;span style="color:#088;font-weight:bold"&gt;extends&lt;/span&gt; Person {} &lt;span style="color:#007"&gt;@Entity&lt;/span&gt;(name = &lt;span style="background-color:hsla(0,100%,50%,0.05)"&gt;&lt;span style="color:#710"&gt;"&lt;/span&gt;&lt;span style="color:#D20"&gt;Engineer&lt;/span&gt;&lt;span style="color:#710"&gt;"&lt;/span&gt;&lt;/span&gt;) &lt;span style="color:#088;font-weight:bold"&gt;public&lt;/span&gt; &lt;span style="color:#088;font-weight:bold"&gt;static&lt;/span&gt; &lt;span style="color:#339;font-weight:bold"&gt;class&lt;/span&gt; &lt;span style="color:#B06;font-weight:bold"&gt;Engineer&lt;/span&gt; &lt;span style="color:#088;font-weight:bold"&gt;extends&lt;/span&gt; Person { &lt;span style="color:#088;font-weight:bold"&gt;private&lt;/span&gt; &lt;span style="color:#339;font-weight:bold"&gt;boolean&lt;/span&gt; fellow; &lt;span style="color:#777"&gt;//Getters and setters omitted for brevity&lt;/span&gt; } }&lt;/code&gt;&lt;/pre&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;There are several methods which we have overridden from the base class, like:&lt;/p&gt; &lt;/div&gt; &lt;div class="dlist"&gt; &lt;dl&gt; &lt;dt class="hdlist1"&gt;&lt;code&gt;getAnnotatedClasses&lt;/code&gt;&lt;/dt&gt; &lt;dd&gt; &lt;p&gt;Which defines the entity classes we want this test case to use.&lt;/p&gt; &lt;/dd&gt; &lt;dt class="hdlist1"&gt;&lt;code&gt;addConfigOptions&lt;/code&gt;&lt;/dt&gt; &lt;dd&gt; &lt;p&gt;Which defines the additional configuration properties we’d like to provide to Hibernate.&lt;/p&gt; &lt;/dd&gt; &lt;/dl&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;The &lt;code&gt;setUp&lt;/code&gt; method uses the &lt;code&gt;@Before&lt;/code&gt; JUnit annotation, and so it will be called before every test execution.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;The &lt;code&gt;testBulkUpdate&lt;/code&gt; method defines the test logic which replicates the Hibernate issue in question.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Notice the use of the &lt;code&gt;doInJPA&lt;/code&gt; methods which hide all the logic for creating an &lt;code&gt;EntityManager&lt;/code&gt;, starting a transaction, committing it and closing the &lt;code&gt;EntityManager&lt;/code&gt;.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;All you need to do is to provide the data access logic.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect2"&gt; &lt;h3 id="testing-on-various-rdbms"&gt;&lt;a class="anchor" href="#testing-on-various-rdbms"&gt;&lt;/a&gt;Testing on various RDBMS&lt;/h3&gt; &lt;div class="paragraph"&gt; &lt;p&gt;One of the best advantages of using the actual Hibernate ORM tets suite is that you can easily switch the underlying database.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;For instance, to run this test on PostgreSQL, just run the following Gradle command from the &lt;code&gt;hibernate-core&lt;/code&gt; folder:&lt;/p&gt; &lt;/div&gt; &lt;div class="listingblock"&gt; &lt;div class="content"&gt; &lt;pre class="CodeRay highlight"&gt;&lt;code data-lang="bash"&gt;gradlew test --tests org.hibernate.test.bulkid.GlobalQuotedIdentifiersBulkIdTest -Pdb=pgsql&lt;/code&gt;&lt;/pre&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Or, if you want to run this test on a specific database right from your IDE make sure you setup the current database using the following command from within the Hibernate module folder the test is located (e.g. &lt;code&gt;hibernate-core&lt;/code&gt;):&lt;/p&gt; &lt;/div&gt; &lt;div class="listingblock"&gt; &lt;div class="content"&gt; &lt;pre class="CodeRay highlight"&gt;&lt;code data-lang="bash"&gt;gradlew sDB -Pdb=pgsql&lt;/code&gt;&lt;/pre&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Now, when you run the &lt;code&gt;GlobalQuotedIdentifiersBulkIdTest&lt;/code&gt; from your IDE, the test will run on PostgreSQL.&lt;/p&gt; &lt;/div&gt; &lt;div class="quoteblock"&gt; &lt;blockquote&gt; &lt;div class="paragraph"&gt; &lt;p&gt;In &lt;code&gt;hibernate-orm/gradle/databases.gradle&lt;/code&gt; configuration file, you can find and customize the database profiles that you can pass via the &lt;code&gt;-Pdb&lt;/code&gt; Gradle property.&lt;/p&gt; &lt;/div&gt; &lt;/blockquote&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Awesome stuff!&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect2"&gt; &lt;h3 id="committing-the-test-case"&gt;&lt;a class="anchor" href="#committing-the-test-case"&gt;&lt;/a&gt;Committing the test case&lt;/h3&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Now, we can commit all changes:&lt;/p&gt; &lt;/div&gt; &lt;div class="listingblock"&gt; &lt;div class="content"&gt; &lt;pre class="CodeRay highlight"&gt;&lt;code data-lang="bash"&gt;git commit -am "HHH-12561 - bulk_id_strategy does not work with globally_quoted_identifiers"&lt;/code&gt;&lt;/pre&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Next, we need to push the local branch to our fork:&lt;/p&gt; &lt;/div&gt; &lt;div class="listingblock"&gt; &lt;div class="content"&gt; &lt;pre class="CodeRay highlight"&gt;&lt;code data-lang="bash"&gt;git push origin HHH-12561&lt;/code&gt;&lt;/pre&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Now, go to your &lt;code&gt;hibernate-orm&lt;/code&gt; fork page on GitHUb and press the &lt;code&gt;Compare and pull request&lt;/code&gt; button:&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="http://in.relation.to/images/testcase/CompareAndPullRequest.png" alt="Compare and Pull Request, align=" width="center" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Now, add a commit message, choose the &lt;code&gt;JIRA issue Test Case&lt;/code&gt; label, and click the &lt;code&gt;Click Pull Request&lt;/code&gt; button:&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="http://in.relation.to/images/testcase/OpenPullRequest.png" alt="Open Pull Request, align=" width="center" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;That’s it!&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;You’ve just submitted your test case to the &lt;code&gt;hibernate-orm&lt;/code&gt; project which can be integrated along with the fix.&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="http://in.relation.to/images/testcase/PullRequests.png" alt="Pull Requests, align=" width="center" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect1"&gt; &lt;h2 id="conclusion"&gt;&lt;a class="anchor" href="#conclusion"&gt;&lt;/a&gt;Conclusion&lt;/h2&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;As you can see, providing a test case for the &lt;code&gt;hibernate-orm&lt;/code&gt; project as a GitHub Pull Request is even easier than working with the &lt;code&gt;hibernate-test-case-templates&lt;/code&gt;.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Therefore, if you spot a Hibernate issue, prior to creating the Hibernate JIRA issue, please provide a test case which reproduces the issue in question.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/nf1zqBu19TI" height="1" width="1" alt=""/&gt;</content><summary>A while ago, I wrote this article on the Hibernate blog which shows you how to create a test case which reproduces a certain Hibernate ORM issue. In the meanwhile, I came to realize that there is a much better way which I will explain in this article. The hibernate-test-case-templates drawbacks Although the hibernate-test-case-templates is much better than having to come up with your own test case...</summary><dc:creator>Vlad Mihalcea</dc:creator><dc:date>2018-06-04T00:00:00Z</dc:date><feedburner:origLink>http://in.relation.to/2018/06/04/best-way-write-hibernate-orm-issue-test-case/</feedburner:origLink></entry></feed>
